"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8922],{3905:(t,e,r)=>{r.d(e,{Zo:()=>c,kt:()=>u});var a=r(7294);function n(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function o(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,a)}return r}function l(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?o(Object(r),!0).forEach((function(e){n(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function i(t,e){if(null==t)return{};var r,a,n=function(t,e){if(null==t)return{};var r,a,n={},o=Object.keys(t);for(a=0;a<o.length;a++)r=o[a],e.indexOf(r)>=0||(n[r]=t[r]);return n}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(a=0;a<o.length;a++)r=o[a],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(n[r]=t[r])}return n}var s=a.createContext({}),p=function(t){var e=a.useContext(s),r=e;return t&&(r="function"==typeof t?t(e):l(l({},e),t)),r},c=function(t){var e=p(t.components);return a.createElement(s.Provider,{value:e},t.children)},d="mdxType",f={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},m=a.forwardRef((function(t,e){var r=t.components,n=t.mdxType,o=t.originalType,s=t.parentName,c=i(t,["components","mdxType","originalType","parentName"]),d=p(r),m=n,u=d["".concat(s,".").concat(m)]||d[m]||f[m]||o;return r?a.createElement(u,l(l({ref:e},c),{},{components:r})):a.createElement(u,l({ref:e},c))}));function u(t,e){var r=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var o=r.length,l=new Array(o);l[0]=m;var i={};for(var s in e)hasOwnProperty.call(e,s)&&(i[s]=e[s]);i.originalType=t,i[d]="string"==typeof t?t:n,l[1]=i;for(var p=2;p<o;p++)l[p]=r[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},5667:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>s,contentTitle:()=>l,default:()=>f,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var a=r(7462),n=(r(7294),r(3905));const o={},l="EthStats",i={unversionedId:"fundamentals/configuration/ethstats",id:"fundamentals/configuration/ethstats",title:"EthStats",description:"| Property | Env Variable                      | Description                                                | Default                 |",source:"@site/docs/02-fundamentals/04-configuration/ethstats.md",sourceDirName:"02-fundamentals/04-configuration",slug:"/fundamentals/configuration/ethstats",permalink:"/docs/fundamentals/configuration/ethstats",draft:!1,editUrl:"https://github.com/NethermindEth/docs/tree/main/docs/docs/02-fundamentals/04-configuration/ethstats.md",tags:[],version:"current",lastUpdatedAt:1692227448,formattedLastUpdatedAt:"Aug 16, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Bloom",permalink:"/docs/fundamentals/configuration/bloom"},next:{title:"HealthChecks",permalink:"/docs/fundamentals/configuration/healthchecks"}},s={},p=[],c={toc:p},d="wrapper";function f(t){let{components:e,...r}=t;return(0,n.kt)(d,(0,a.Z)({},c,r,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"ethstats"},"EthStats"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Property"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Env Variable"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Default"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Contact"),(0,n.kt)("td",{parentName:"tr",align:"left"},"NETHERMIND_ETHSTATSCONFIG_CONTACT"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Node owner contact details displayed on the ethstats page."),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"mailto:hello@nethermind.io"},"hello@nethermind.io"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Enabled"),(0,n.kt)("td",{parentName:"tr",align:"left"},"NETHERMIND_ETHSTATSCONFIG_ENABLED"),(0,n.kt)("td",{parentName:"tr",align:"left"},"If 'true' then EthStats publishing gets enabled."),(0,n.kt)("td",{parentName:"tr",align:"left"},"false")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("td",{parentName:"tr",align:"left"},"NETHERMIND_ETHSTATSCONFIG_NAME"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Node name displayed on the given ethstats server."),(0,n.kt)("td",{parentName:"tr",align:"left"},"Nethermind")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Secret"),(0,n.kt)("td",{parentName:"tr",align:"left"},"NETHERMIND_ETHSTATSCONFIG_SECRET"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Password for publishing to a given ethstats server."),(0,n.kt)("td",{parentName:"tr",align:"left"},"secret")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Server"),(0,n.kt)("td",{parentName:"tr",align:"left"},"NETHERMIND_ETHSTATSCONFIG_SERVER"),(0,n.kt)("td",{parentName:"tr",align:"left"},"EthStats server wss://hostname:port/api/"),(0,n.kt)("td",{parentName:"tr",align:"left"},"ws://localhost:3000/api")))))}f.isMDXComponent=!0}}]);
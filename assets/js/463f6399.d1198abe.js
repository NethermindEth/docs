"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1702],{3905:(t,e,r)=>{r.d(e,{Zo:()=>d,kt:()=>c});var a=r(7294);function n(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function i(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,a)}return r}function o(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?i(Object(r),!0).forEach((function(e){n(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function l(t,e){if(null==t)return{};var r,a,n=function(t,e){if(null==t)return{};var r,a,n={},i=Object.keys(t);for(a=0;a<i.length;a++)r=i[a],e.indexOf(r)>=0||(n[r]=t[r]);return n}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(a=0;a<i.length;a++)r=i[a],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(n[r]=t[r])}return n}var m=a.createContext({}),p=function(t){var e=a.useContext(m),r=e;return t&&(r="function"==typeof t?t(e):o(o({},e),t)),r},d=function(t){var e=p(t.components);return a.createElement(m.Provider,{value:e},t.children)},f="mdxType",k={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},N=a.forwardRef((function(t,e){var r=t.components,n=t.mdxType,i=t.originalType,m=t.parentName,d=l(t,["components","mdxType","originalType","parentName"]),f=p(r),N=n,c=f["".concat(m,".").concat(N)]||f[N]||k[N]||i;return r?a.createElement(c,o(o({ref:e},d),{},{components:r})):a.createElement(c,o({ref:e},d))}));function c(t,e){var r=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var i=r.length,o=new Array(i);o[0]=N;var l={};for(var m in e)hasOwnProperty.call(e,m)&&(l[m]=e[m]);l.originalType=t,l[f]="string"==typeof t?t:n,o[1]=l;for(var p=2;p<i;p++)o[p]=r[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}N.displayName="MDXCreateElement"},971:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>m,contentTitle:()=>o,default:()=>k,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var a=r(7462),n=(r(7294),r(3905));const i={},o="KeyStore",l={unversionedId:"fundamentals/configuration/keystore",id:"fundamentals/configuration/keystore",title:"KeyStore",description:"| Property                    | Env Variable                                          | Description                                                                                                                                                                                                                                                  | Default     |",source:"@site/docs/02-fundamentals/04-configuration/keystore.md",sourceDirName:"02-fundamentals/04-configuration",slug:"/fundamentals/configuration/keystore",permalink:"/nethermindeth/docs/fundamentals/configuration/keystore",draft:!1,editUrl:"https://github.com/NethermindEth/docs/tree/main/docs/docs/02-fundamentals/04-configuration/keystore.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"JsonRpc",permalink:"/nethermindeth/docs/fundamentals/configuration/jsonrpc"},next:{title:"Merge",permalink:"/nethermindeth/docs/fundamentals/configuration/merge"}},m={},p=[],d={toc:p},f="wrapper";function k(t){let{components:e,...r}=t;return(0,n.kt)(f,(0,a.Z)({},d,r,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"keystore"},"KeyStore"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Property"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Env Variable"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Default"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"BlockAuthorAccount"),(0,n.kt)("td",{parentName:"tr",align:"left"},"NETHERMIND_KEYSTORECONFIG_BLOCKAUTHORACCOUNT"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Account to be used by the block author / coinbase, to be loaded from keystore"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Cipher"),(0,n.kt)("td",{parentName:"tr",align:"left"},"NETHERMIND_KEYSTORECONFIG_CIPHER"),(0,n.kt)("td",{parentName:"tr",align:"left"},"See ",(0,n.kt)("a",{parentName:"td",href:"https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition"},"https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition")),(0,n.kt)("td",{parentName:"tr",align:"left"},"aes-128-ctr")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"EnodeAccount"),(0,n.kt)("td",{parentName:"tr",align:"left"},"NETHERMIND_KEYSTORECONFIG_ENODEACCOUNT"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Account to be used by the node for network communication (enode), to be loaded from keystore. If neither this nor EnodeKeyFile is specified, the key for network communication will be autogenerated in 'node.key.plain' file."),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"EnodeKeyFile"),(0,n.kt)("td",{parentName:"tr",align:"left"},"NETHERMIND_KEYSTORECONFIG_ENODEKEYFILE"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Path to key file to be used by the node for network communication (enode). If neither this nor EnodeAccount is specified, the key for network communication will be autogenerated in 'node.key.plain' file. If the file does not exist it will be generated."),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"IVSize"),(0,n.kt)("td",{parentName:"tr",align:"left"},"NETHERMIND_KEYSTORECONFIG_IVSIZE"),(0,n.kt)("td",{parentName:"tr",align:"left"},"See ",(0,n.kt)("a",{parentName:"td",href:"https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition"},"https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition")),(0,n.kt)("td",{parentName:"tr",align:"left"},"16")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Kdf"),(0,n.kt)("td",{parentName:"tr",align:"left"},"NETHERMIND_KEYSTORECONFIG_KDF"),(0,n.kt)("td",{parentName:"tr",align:"left"},"See ",(0,n.kt)("a",{parentName:"td",href:"https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition"},"https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition")),(0,n.kt)("td",{parentName:"tr",align:"left"},"scrypt")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"KdfparamsDklen"),(0,n.kt)("td",{parentName:"tr",align:"left"},"NETHERMIND_KEYSTORECONFIG_KDFPARAMSDKLEN"),(0,n.kt)("td",{parentName:"tr",align:"left"},"See ",(0,n.kt)("a",{parentName:"td",href:"https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition"},"https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition")),(0,n.kt)("td",{parentName:"tr",align:"left"},"32")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"KdfparamsN"),(0,n.kt)("td",{parentName:"tr",align:"left"},"NETHERMIND_KEYSTORECONFIG_KDFPARAMSN"),(0,n.kt)("td",{parentName:"tr",align:"left"},"See ",(0,n.kt)("a",{parentName:"td",href:"https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition"},"https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition")),(0,n.kt)("td",{parentName:"tr",align:"left"},"262144")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"KdfparamsP"),(0,n.kt)("td",{parentName:"tr",align:"left"},"NETHERMIND_KEYSTORECONFIG_KDFPARAMSP"),(0,n.kt)("td",{parentName:"tr",align:"left"},"See ",(0,n.kt)("a",{parentName:"td",href:"https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition"},"https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition")),(0,n.kt)("td",{parentName:"tr",align:"left"},"1")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"KdfparamsR"),(0,n.kt)("td",{parentName:"tr",align:"left"},"NETHERMIND_KEYSTORECONFIG_KDFPARAMSR"),(0,n.kt)("td",{parentName:"tr",align:"left"},"See ",(0,n.kt)("a",{parentName:"td",href:"https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition"},"https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition")),(0,n.kt)("td",{parentName:"tr",align:"left"},"8")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"KdfparamsSaltLen"),(0,n.kt)("td",{parentName:"tr",align:"left"},"NETHERMIND_KEYSTORECONFIG_KDFPARAMSSALTLEN"),(0,n.kt)("td",{parentName:"tr",align:"left"},"See ",(0,n.kt)("a",{parentName:"td",href:"https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition"},"https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition")),(0,n.kt)("td",{parentName:"tr",align:"left"},"32")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"KeyStoreDirectory"),(0,n.kt)("td",{parentName:"tr",align:"left"},"NETHERMIND_KEYSTORECONFIG_KEYSTOREDIRECTORY"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Directory to store keys in."),(0,n.kt)("td",{parentName:"tr",align:"left"},"keystore")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"KeyStoreEncoding"),(0,n.kt)("td",{parentName:"tr",align:"left"},"NETHERMIND_KEYSTORECONFIG_KEYSTOREENCODING"),(0,n.kt)("td",{parentName:"tr",align:"left"},"See ",(0,n.kt)("a",{parentName:"td",href:"https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition"},"https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition")),(0,n.kt)("td",{parentName:"tr",align:"left"},"UTF-8")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"PasswordFiles"),(0,n.kt)("td",{parentName:"tr",align:"left"},"NETHERMIND_KEYSTORECONFIG_PASSWORDFILES"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Password files storing passwords to unlock the accounts from the UnlockAccounts configuration item"),(0,n.kt)("td",{parentName:"tr",align:"left"},"[]")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Passwords"),(0,n.kt)("td",{parentName:"tr",align:"left"},"NETHERMIND_KEYSTORECONFIG_PASSWORDS"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Passwords to use to unlock accounts from the UnlockAccounts configuration item. Only used when no PasswordFiles provided."),(0,n.kt)("td",{parentName:"tr",align:"left"},"[]")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"SymmetricEncrypterBlockSize"),(0,n.kt)("td",{parentName:"tr",align:"left"},"NETHERMIND_KEYSTORECONFIG_SYMMETRICENCRYPTERBLOCKSIZE"),(0,n.kt)("td",{parentName:"tr",align:"left"},"See ",(0,n.kt)("a",{parentName:"td",href:"https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition"},"https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition")),(0,n.kt)("td",{parentName:"tr",align:"left"},"128")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"SymmetricEncrypterKeySize"),(0,n.kt)("td",{parentName:"tr",align:"left"},"NETHERMIND_KEYSTORECONFIG_SYMMETRICENCRYPTERKEYSIZE"),(0,n.kt)("td",{parentName:"tr",align:"left"},"See ",(0,n.kt)("a",{parentName:"td",href:"https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition"},"https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition")),(0,n.kt)("td",{parentName:"tr",align:"left"},"128")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"TestNodeKey"),(0,n.kt)("td",{parentName:"tr",align:"left"},"NETHERMIND_KEYSTORECONFIG_TESTNODEKEY"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Plain private key to be used in test scenarios"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"UnlockAccounts"),(0,n.kt)("td",{parentName:"tr",align:"left"},"NETHERMIND_KEYSTORECONFIG_UNLOCKACCOUNTS"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Accounts to unlock on startup using provided PasswordFiles and Passwords"),(0,n.kt)("td",{parentName:"tr",align:"left"},"[]")))))}k.isMDXComponent=!0}}]);
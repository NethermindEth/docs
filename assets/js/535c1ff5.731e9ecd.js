"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4693],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),p=c(n),d=r,h=p["".concat(l,".").concat(d)]||p[d]||u[d]||i;return n?a.createElement(h,o(o({ref:t},m),{},{components:n})):a.createElement(h,o({ref:t},m))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:r,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9121:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const i={description:"Metrics then can be used to monitor your running Nethermind nodes"},o="Setting up local Metrics infrastructure",s={unversionedId:"monitoring/metrics-explanation/setting-up-local-metrics-infrastracture",id:"monitoring/metrics-explanation/setting-up-local-metrics-infrastracture",title:"Setting up local Metrics infrastructure",description:"Metrics then can be used to monitor your running Nethermind nodes",source:"@site/docs/04-monitoring/metrics-explanation/setting-up-local-metrics-infrastracture.md",sourceDirName:"04-monitoring/metrics-explanation",slug:"/monitoring/metrics-explanation/setting-up-local-metrics-infrastracture",permalink:"/docs/docs/monitoring/metrics-explanation/setting-up-local-metrics-infrastracture",draft:!1,editUrl:"https://github.com/NethermindEth/docs/tree/main/docs/docs/04-monitoring/metrics-explanation/setting-up-local-metrics-infrastracture.md",tags:[],version:"current",frontMatter:{description:"Metrics then can be used to monitor your running Nethermind nodes"},sidebar:"tutorialSidebar",previous:{title:"Runner module",permalink:"/docs/docs/monitoring/metrics-explanation/runner"},next:{title:"Store module",permalink:"/docs/docs/monitoring/metrics-explanation/store"}},l={},c=[{value:"Metrics Configuration",id:"metrics-configuration",level:2},{value:"Metrics infrastructure",id:"metrics-infrastructure",level:2},{value:"Enabling Metrics in Nethermind",id:"enabling-metrics-in-nethermind",level:3},{value:"Running sample configuration",id:"running-sample-configuration",level:3},{value:"Prometheus, Pushgateway and Grafana sources",id:"prometheus-pushgateway-and-grafana-sources",level:3}],m={toc:c},p="wrapper";function u(e){let{components:t,...i}=e;return(0,r.kt)(p,(0,a.Z)({},m,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"setting-up-local-metrics-infrastructure"},"Setting up local Metrics infrastructure"),(0,r.kt)("h2",{id:"metrics-configuration"},"Metrics Configuration"),(0,r.kt)("p",null,"Nethermind metrics can be consumed by ",(0,r.kt)("em",{parentName:"p"},"Prometheus/Grafana")," if configured\nin ",(0,r.kt)("a",{parentName:"p",href:"/docs/docs/fundamentals/configuration/metrics"},"Metrics configuration category"),"."),(0,r.kt)("h2",{id:"metrics-infrastructure"},"Metrics infrastructure"),(0,r.kt)("h3",{id:"enabling-metrics-in-nethermind"},"Enabling Metrics in Nethermind"),(0,r.kt)("p",null,"Metrics can be enabled by simply passing ",(0,r.kt)("inlineCode",{parentName:"p"},"--Metrics.Enabled true")," argument to the Docker containers,",(0,r.kt)("inlineCode",{parentName:"p"},"Nethermind.Runner"),"\nor ",(0,r.kt)("inlineCode",{parentName:"p"},"Nethermind.Launcher"),"  e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"./Nethermind.Runner --Metrics.Enabled true"),"."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Metrics.PushGatewayUrl")," will need to be amended if pushgateway endpoint is not default."),(0,r.kt)("h3",{id:"running-sample-configuration"},"Running sample configuration"),(0,r.kt)("ul",{className:"contains-task-list"},(0,r.kt)("li",{parentName:"ul",className:"task-list-item"},(0,r.kt)("input",{parentName:"li",type:"checkbox",checked:!0,disabled:!0})," ","clone ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/NethermindEth/metrics-infrastructure"},"metrics-infrastructure")," repository")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/NethermindEth/metrics-infrastructure.git\n")),(0,r.kt)("ol",{className:"contains-task-list"},(0,r.kt)("li",{parentName:"ol",className:"task-list-item"},(0,r.kt)("input",{parentName:"li",type:"checkbox",checked:!0,disabled:!0})," ","go to ",(0,r.kt)("inlineCode",{parentName:"li"},"metrics-infrastructure")," directory")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cd metrics-explanation-infrastructure\n")),(0,r.kt)("ol",{className:"contains-task-list"},(0,r.kt)("li",{parentName:"ol",className:"task-list-item"},(0,r.kt)("input",{parentName:"li",type:"checkbox",checked:!0,disabled:!0})," ","run docker stack")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker-compose up -d\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"Prometheus")," instance should be now running on ",(0,r.kt)("a",{parentName:"li",href:"http://localhost:9090/"},(0,r.kt)("inlineCode",{parentName:"a"},"http://localhost:9090/"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"Pushgateway")," on ",(0,r.kt)("a",{parentName:"li",href:"http://localhost:9091/"},(0,r.kt)("inlineCode",{parentName:"a"},"http://localhost:9091/"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"Grafana on")," ",(0,r.kt)("a",{parentName:"li",href:"http://localhost:3000/"},(0,r.kt)("inlineCode",{parentName:"a"},"http://localhost:3000/")),"`","`")),(0,r.kt)("ol",{className:"contains-task-list"},(0,r.kt)("li",{parentName:"ol",className:"task-list-item"},(0,r.kt)("input",{parentName:"li",type:"checkbox",checked:!0,disabled:!0})," ","run the ",(0,r.kt)("inlineCode",{parentName:"li"},"Nethermind")," node with ",(0,r.kt)("inlineCode",{parentName:"li"},"Metrics")," enabled and you should see metrics inflowing on\n",(0,r.kt)("em",{parentName:"li"},"Pushgateway")," ",(0,r.kt)("a",{parentName:"li",href:"http://localhost:9091/"},"url"))),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"You can add nethermind service to the ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose.yml")," file so that it runs with the whole stack"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"nethermind:\n  image: nethermind/nethermind\n  container_name: nethermind\n  restart: unless-stopped\n  command: '--config goerli --Metrics.Enabled true'\n  network_mode: host\n  volumes:\n    - ./nethermind_db/:/nethermind/nethermind_db/\n    - ./keystore/:/nethermind/keystore/\n    - ./logs/:/nethermind/logs/\n"))),(0,r.kt)("p",null,'{% tabs %}\n{% tab title="Runner" %}'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./Nethermind.Runner --Metrics.Enabled true\n")),(0,r.kt)("p",null,"{% endtab %}"),(0,r.kt)("p",null,'{% tab title="Launcher" %}'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./Nethermind.Launcher --Metrics.Enabled true\n")),(0,r.kt)("p",null,"{% endtab %}"),(0,r.kt)("p",null,'{% tab title="Docker" %}'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker run -it --network host nethermind/nethermind:alpine --Metrics.Enabled\n")),(0,r.kt)("p",null,"{% endtab %}\n{% endtabs %}"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://nethermind.readthedocs.io/en/latest/_images/pushgateway.png",alt:"http://localhost:9091/"})),(0,r.kt)("ol",{className:"contains-task-list"},(0,r.kt)("li",{parentName:"ol",className:"task-list-item"},(0,r.kt)("input",{parentName:"li",type:"checkbox",checked:!0,disabled:!0})," ","open ",(0,r.kt)("em",{parentName:"li"},"Grafana")," ",(0,r.kt)("a",{parentName:"li",href:"http://localhost:3000"},"url")," and login with default login ","(","admin",")"," and password ","(","admin",")",", skip\npassword change if you want")),(0,r.kt)("ul",{className:"contains-task-list"},(0,r.kt)("li",{parentName:"ul",className:"task-list-item"},(0,r.kt)("input",{parentName:"li",type:"checkbox",checked:!0,disabled:!0})," ","go to dashboards management ",(0,r.kt)("a",{parentName:"li",href:"http://localhost:3000/dashboards"},(0,r.kt)("inlineCode",{parentName:"a"},"http://localhost:3000/dashboards")),"and\nclick ",(0,r.kt)("inlineCode",{parentName:"li"},"Nethermind"))),(0,r.kt)("p",null,(0,r.kt)("img",{src:n(1666).Z,width:"899",height:"422"})),(0,r.kt)("ul",{className:"contains-task-list"},(0,r.kt)("li",{parentName:"ul",className:"task-list-item"},(0,r.kt)("input",{parentName:"li",type:"checkbox",checked:!0,disabled:!0})," ","you can now explore metrics and monitor your Nethermind node")),(0,r.kt)("p",null,(0,r.kt)("img",{src:n(5905).Z,width:"1821",height:"852"})),(0,r.kt)("h3",{id:"prometheus-pushgateway-and-grafana-sources"},"Prometheus, Pushgateway and Grafana sources"),(0,r.kt)("p",null,'{% embed url="',(0,r.kt)("a",{parentName:"p",href:"https://github.com/prometheus/prometheus%22"},'https://github.com/prometheus/prometheus"'),' caption="Prometheus GitHub" %}'),(0,r.kt)("p",null,'{% embed url="',(0,r.kt)("a",{parentName:"p",href:"https://github.com/prometheus/pushgateway%22"},'https://github.com/prometheus/pushgateway"'),' caption="Pushgateway GitHub" %}'),(0,r.kt)("p",null,'{% embed url="',(0,r.kt)("a",{parentName:"p",href:"https://github.com/grafana/grafana%22"},'https://github.com/grafana/grafana"'),' caption="Grafana GitHub" %}'))}u.isMDXComponent=!0},1666:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/image(26)-2e877f27155a67cfd995c39ff39d8604.png"},5905:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/image(29)-40080dde89bd64b9f96a5867aae82fa8.png"}}]);
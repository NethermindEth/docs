"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6688],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},h="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),h=u(n),d=a,m=h["".concat(l,".").concat(d)]||h[d]||p[d]||o;return n?r.createElement(m,i(i({ref:t},c),{},{components:n})):r.createElement(m,i({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[h]="string"==typeof e?e:a,i[1]=s;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},878:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var r=n(7462),a=(n(7294),n(3905));const o={description:"Private networks of Nethermind Client"},i="Private Networks",s={unversionedId:"fundamentals/private-networks/README",id:"fundamentals/private-networks/README",title:"Private Networks",description:"Private networks of Nethermind Client",source:"@site/docs/02-fundamentals/09-private-networks/README.md",sourceDirName:"02-fundamentals/09-private-networks",slug:"/fundamentals/private-networks/",permalink:"/docs/docs/fundamentals/private-networks/",draft:!1,editUrl:"https://github.com/NethermindEth/docs/tree/main/docs/docs/02-fundamentals/09-private-networks/README.md",tags:[],version:"current",frontMatter:{description:"Private networks of Nethermind Client"},sidebar:"tutorialSidebar",previous:{title:"Resync database from scratch",permalink:"/docs/docs/fundamentals/how-to-reduce-database-size/resync-database-from-scratch"},next:{title:"How to setup a Nethermind only Clique based chain",permalink:"/docs/docs/fundamentals/private-networks/how-to-setup-a-nethermind-only-clique-based-chain"}},l={},u=[{value:"Consensus Algorithms",id:"consensus-algorithms",level:2},{value:"PoW",id:"pow",level:4},{value:"Clique",id:"clique",level:4},{value:"AuRa",id:"aura",level:4},{value:"NethDev (we also call it Spaceneth)",id:"nethdev-we-also-call-it-spaceneth",level:4},{value:"Configuration",id:"configuration",level:3}],c={toc:u},h="wrapper";function p(e){let{components:t,...n}=e;return(0,a.kt)(h,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"private-networks"},"Private Networks"),(0,a.kt)("p",null,"It is possible to configure a private network ","(","private blockchain",")"," using Nethermind nodes. Before you setup a private\nnetwork you will need to make a few decisions. One of them is choosing a consensus protocol that will be used for\nsecuring the network."),(0,a.kt)("h2",{id:"consensus-algorithms"},"Consensus Algorithms"),(0,a.kt)("p",null,"Nethermind supports the following consensus algorithms:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"ethash ","(","PoW",")"),(0,a.kt)("li",{parentName:"ul"},"AuRa ","(","PoA",")"),(0,a.kt)("li",{parentName:"ul"},"Clique ","(","PoA",")"),(0,a.kt)("li",{parentName:"ul"},"NethDev ","(","debug / dev",")")),(0,a.kt)("h4",{id:"pow"},"PoW"),(0,a.kt)("p",null,"In the proof of work consensus algorithm some of the nodes participate in a race to mine a new block by solving a\nmathematical puzzle. The difficulty of the puzzle ","(","the amount of computation needed to find a solution",")"," is adjusted so\nas to make blocks appear with some average frequency ","(","every 15 seconds on the Ethereum mainnet",")",". PoW is currently used\nto secure the public Ethereum mainnet and the Ropsten testnet. The only mining algorithm used for PoW in Ethereum is\ncalled ethash and is designed to be strict memory hard\n","(","see ",(0,a.kt)("a",{parentName:"p",href:"http://www.hashcash.org/papers/memohash.pdf"},"Strict Memory Hard Hashing Functions"),")","."),(0,a.kt)("h4",{id:"clique"},"Clique"),(0,a.kt)("p",null,"Clique is an implementation of the Proof of Authority ","(","PoA",")"," consensus algorithm. The idea behind PoA is to choose a\ngroup of nodes within the network with authority to create ","(","seal",")"," new blocks. In Clique such nodes are called signers\nand after the initial setup signers can vote to add new signers to the group or to remove any of the existing signers.\nClique is currently supported by Geth, Parity, Nethermind and Pantheon and is used to secure the Goerli and Rinkeby\ntestnets."),(0,a.kt)("h4",{id:"aura"},"AuRa"),(0,a.kt)("p",null,"AuRa is another implementation of the Proof of Authority consensus algorithm. It is currently only supported by\nNethermind and Parity Ethereum client. Aura is used to secure the Kovan testnet and the POA Network."),(0,a.kt)("h4",{id:"nethdev-we-also-call-it-spaceneth"},"NethDev ","(","we also call it Spaceneth",")"),(0,a.kt)("p",null,"NethDev is a very simple consensus algorithm ","(","or to better describe it - lack of consensus algorithm",")",". NethDev can be\nused for setting up nodes for development and testing purposes. On the NethDev network any node can create a block with\ntransactions and as long as it is a valid Ethereum block all other nodes will accept it."),(0,a.kt)("h3",{id:"configuration"},"Configuration"),(0,a.kt)("p",null,"Nethermind uses the same format chainspec files that can be used for setting up private networks in Parity. Most of the\nelements of the chainspec files are supported by Nethermind:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"consensus engine and its parameters ","(","to choose between Ethash, Clique, AuRa or NethDev",")"),(0,a.kt)("li",{parentName:"ul"},"genesis block spec"),(0,a.kt)("li",{parentName:"ul"},"EIP transitions"),(0,a.kt)("li",{parentName:"ul"},"initial account allocations"),(0,a.kt)("li",{parentName:"ul"},"bootnodes")),(0,a.kt)("p",null,"The following elements are NOT supported at the moment:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"hardcoded sync block hashes"),(0,a.kt)("li",{parentName:"ul"},"precompile definitions and precompile activation blocks")),(0,a.kt)("p",null,"You can find below links to some of the chainspec files used to define various Ethereum networks:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/NethermindEth/nethermind/blob/9d67fc0c7b5389770521f501e2b649543ae0afa9/src/Nethermind/Chains/foundation.json"},"foundation")," -\nthe public Ethereum mainnet"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/NethermindEth/nethermind/blob/9d67fc0c7b5389770521f501e2b649543ae0afa9/src/Nethermind/Chains/goerli.json"},"goerli")," -\nthe new Clique based testnet"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/NethermindEth/nethermind/blob/9d67fc0c7b5389770521f501e2b649543ae0afa9/src/Nethermind/Chains/spaceneth.json"},"spaceneth")," -\na private network example with NethDev")))}p.isMDXComponent=!0}}]);
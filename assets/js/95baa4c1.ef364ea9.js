"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7129],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=a.createContext({}),s=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},f="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),f=s(r),d=n,m=f["".concat(c,".").concat(d)]||f[d]||u[d]||o;return r?a.createElement(m,i(i({ref:t},p),{},{components:r})):a.createElement(m,i({ref:t},p))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[f]="string"==typeof e?e:n,i[1]=l;for(var s=2;s<o;s++)i[s]=r[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},3510:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var a=r(7462),n=(r(7294),r(3905));const o={},i="TraceStore",l={unversionedId:"fundamentals/configuration/tracestore",id:"fundamentals/configuration/tracestore",title:"TraceStore",description:"| Property                       | Env Variable                                               | Description                                                                                                                                                       | Default        |",source:"@site/docs/fundamentals/04-configuration/tracestore.md",sourceDirName:"fundamentals/04-configuration",slug:"/fundamentals/configuration/tracestore",permalink:"/docs/fundamentals/configuration/tracestore",draft:!1,editUrl:"https://github.com/NethermindEth/docs/tree/main/docs/docs/fundamentals/04-configuration/tracestore.md",tags:[],version:"current",lastUpdatedAt:1692388750,formattedLastUpdatedAt:"Aug 18, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Sync",permalink:"/docs/fundamentals/configuration/sync"},next:{title:"TxPool",permalink:"/docs/fundamentals/configuration/txpool"}},c={},s=[],p={toc:s},f="wrapper";function u(e){let{components:t,...r}=e;return(0,n.kt)(f,(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"tracestore"},"TraceStore"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Property"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Env Variable"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Default"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"BlocksToKeep"),(0,n.kt)("td",{parentName:"tr",align:"left"},"NETHERMIND_TRACESTORECONFIG_BLOCKSTOKEEP"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Defines how many blocks counting from head are kept in the TraceStore, if '0' all traces of processed blocks will be kept."),(0,n.kt)("td",{parentName:"tr",align:"left"},"10000")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"DeserializationParallelization"),(0,n.kt)("td",{parentName:"tr",align:"left"},"NETHERMIND_TRACESTORECONFIG_DESERIALIZATIONPARALLELIZATION"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Maximum parallelization when deserializing requests for trace_filter. 0 defaults to logical cores, set to something low if you experience too big resource usage."),(0,n.kt)("td",{parentName:"tr",align:"left"},"0")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Enabled"),(0,n.kt)("td",{parentName:"tr",align:"left"},"NETHERMIND_TRACESTORECONFIG_ENABLED"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Defines whether the TraceStore plugin is enabled, if 'true' traces will come from DB if possible."),(0,n.kt)("td",{parentName:"tr",align:"left"},"false")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"TraceTypes"),(0,n.kt)("td",{parentName:"tr",align:"left"},"NETHERMIND_TRACESTORECONFIG_TRACETYPES"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Defines what kind of traces are saved and kept in TraceStore. Available options are: Trace, Rewards, VmTrace, StateDiff or just All."),(0,n.kt)("td",{parentName:"tr",align:"left"},"Trace, Rewards")))))}u.isMDXComponent=!0}}]);
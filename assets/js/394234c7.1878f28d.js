"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6806],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),m=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=m(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),p=m(n),u=a,h=p["".concat(s,".").concat(u)]||p[u]||c[u]||i;return n?r.createElement(h,l(l({ref:t},d),{},{components:n})):r.createElement(h,l({ref:t},d))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[p]="string"==typeof e?e:a,l[1]=o;for(var m=2;m<i;m++)l[m]=n[m];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},314:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>m});var r=n(7462),a=(n(7294),n(3905));const i={},l="Manage Nethermind with systemd",o={unversionedId:"getting-started/manage-nethermind-with-systemd",id:"getting-started/manage-nethermind-with-systemd",title:"Manage Nethermind with systemd",description:"Create a new user",source:"@site/docs/01-getting-started/manage-nethermind-with-systemd.md",sourceDirName:"01-getting-started",slug:"/getting-started/manage-nethermind-with-systemd",permalink:"/docs/getting-started/manage-nethermind-with-systemd",draft:!1,editUrl:"https://github.com/NethermindEth/docs/tree/main/docs/docs/01-getting-started/manage-nethermind-with-systemd.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Installing Nethermind",permalink:"/docs/getting-started/installing-nethermind"},next:{title:"Migrating From Geth",permalink:"/docs/getting-started/migrating-from-geth"}},s={},m=[{value:"Create a new user",id:"create-a-new-user",level:3},{value:"Install Dependencies",id:"install-dependencies",level:3},{value:"Get Nethermind",id:"get-nethermind",level:3},{value:"Manage Nethermind with systemd",id:"manage-nethermind-with-systemd-1",level:3}],d={toc:m},p="wrapper";function c(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"manage-nethermind-with-systemd"},"Manage Nethermind with systemd"),(0,a.kt)("h3",{id:"create-a-new-user"},"Create a new user"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Create a new user")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo useradd -m -s /bin/bash nethermind\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"Increase the maximum number of open files")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo bash -c 'echo \"nethermind soft nofile 1000000\" > /etc/security/limits.d/nethermind.conf'\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo bash -c 'echo \"nethermind hard nofile 1000000\" >> /etc/security/limits.d/nethermind.conf'\n")),(0,a.kt)("ol",{start:3},(0,a.kt)("li",{parentName:"ol"},"Switch to the new user")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo su - nethermind\n")),(0,a.kt)("h3",{id:"install-dependencies"},"Install Dependencies"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt-get update && sudo apt-get install libsnappy-dev libc6-dev libc6 unzip -y\n")),(0,a.kt)("h3",{id:"get-nethermind"},"Get Nethermind"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("a",{parentName:"li",href:"/docs/getting-started/installing-nethermind"},"Follow instructions")," to get the latest Nethermind package")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"wget [LINUX_PACKAGE_URL]\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"Extract the files")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"unzip [LINUX_PACKAGE_FILENAME] -d build\n")),(0,a.kt)("ol",{start:3},(0,a.kt)("li",{parentName:"ol"},"Create data directory for ",(0,a.kt)("inlineCode",{parentName:"li"},"logs"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"database")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"keystore"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir data\n")),(0,a.kt)("ol",{start:4},(0,a.kt)("li",{parentName:"ol"},"Create ",(0,a.kt)("inlineCode",{parentName:"li"},".env")," file inside ",(0,a.kt)("inlineCode",{parentName:"li"},"data")," directory and provide environment variables to the Node configuration like for\nexample:")),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("inlineCode",{parentName:"p"},"NETHERMIND_CONFIG")," is the important one - defines the network config, the rest is optional.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title=".env"',title:'".env"'},'NETHERMIND_CONFIG="mainnet"\nNETHERMIND_JSONRPCCONFIG_ENABLED=true\nNETHERMIND_JSONRPCCONFIG_HOST="0.0.0.0"\nNETHERMIND_HEALTHCHECKSCONFIG_ENABLED="true"\n')),(0,a.kt)("ol",{start:5},(0,a.kt)("li",{parentName:"ol"},"Remove the no more need package ",(0,a.kt)("strong",{parentName:"li"},"(optional)"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"rm [LINUX_PACKAGE_FILENAME]\n")),(0,a.kt)("h3",{id:"manage-nethermind-with-systemd-1"},"Manage Nethermind with systemd"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Download the nethermind.service config")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"wget https://raw.githubusercontent.com/NethermindEth/nethermind/master/scripts/nethermind.service\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"Move the config into the systemd folder")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo mv nethermind.service /etc/systemd/system/\n")),(0,a.kt)("ol",{start:3},(0,a.kt)("li",{parentName:"ol"},"Reload the systemd configs")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl daemon-reload\n")),(0,a.kt)("ol",{start:4},(0,a.kt)("li",{parentName:"ol"},"Start nethermind service")),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"You can now ",(0,a.kt)("inlineCode",{parentName:"p"},"start"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"stop"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"restart")," Nethermind with systemd")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo service nethermind start\n")),(0,a.kt)("ol",{start:5},(0,a.kt)("li",{parentName:"ol"},"Display the current Nethermind output ",(0,a.kt)("strong",{parentName:"li"},"(optional)"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"journalctl -u nethermind -f\n")),(0,a.kt)("ol",{start:6},(0,a.kt)("li",{parentName:"ol"},"Enable autorun ",(0,a.kt)("strong",{parentName:"li"},"(optional)"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl enable nethermind\n")))}c.isMDXComponent=!0}}]);
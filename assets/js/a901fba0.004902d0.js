"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6494],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),d=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=d(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=d(n),m=i,h=c["".concat(s,".").concat(m)]||c[m]||p[m]||o;return n?r.createElement(h,a(a({ref:t},u),{},{components:n})):r.createElement(h,a({ref:t},u))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:i,a[1]=l;for(var d=2;d<o;d++)a[d]=n[d];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3252:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var r=n(7462),i=(n(7294),n(3905));const o={title:"Building from source",sidebar_label:"Building from source",sidebar_position:0},a=void 0,l={unversionedId:"developers/building-from-source",id:"developers/building-from-source",title:"Building from source",description:"The Nethermind's source code can be obtained from our repository on",source:"@site/docs/developers/building-from-source.md",sourceDirName:"developers",slug:"/developers/building-from-source",permalink:"/docs/developers/building-from-source",draft:!1,editUrl:"https://github.com/NethermindEth/docs/tree/main/docs/docs/developers/building-from-source.md",tags:[],version:"current",lastUpdatedAt:1694728765,formattedLastUpdatedAt:"Sep 14, 2023",sidebarPosition:0,frontMatter:{title:"Building from source",sidebar_label:"Building from source",sidebar_position:0},sidebar:"tutorialSidebar",previous:{title:"Developers",permalink:"/docs/category/developers"},next:{title:"Plugins",permalink:"/docs/developers/plugins"}},s={},d=[{value:"Building standalone binaries",id:"building-standalone-binaries",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Building",id:"building",level:3},{value:"Running the client",id:"running-the-client",level:4},{value:"Testing",id:"testing",level:4},{value:"Bulding Docker image",id:"bulding-docker-image",level:2}],u={toc:d},c="wrapper";function p(e){let{components:t,...n}=e;return(0,i.kt)(c,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The Nethermind's source code can be obtained from ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/NethermindEth/nethermind"},"our repository")," on\nGitHub:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git clone --recursive https://github.com/nethermindeth/nethermind.git\n")),(0,i.kt)("p",null,"There are two options buiding Nethermind from source code:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#building-standalone-binaries"},"Standalone binaries")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#bulding-docker-image"},"Docker image"))),(0,i.kt)("h2",{id:"building-standalone-binaries"},"Building standalone binaries"),(0,i.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,i.kt)("p",null,"To build Nethermind from source, install ",(0,i.kt)("a",{parentName:"p",href:"https://dotnet.microsoft.com/en-us/download"},".NET SDK")," 7 or later."),(0,i.kt)("h3",{id:"building"},"Building"),(0,i.kt)("p",null,"To build both the client and tests, run the following command from the project's root directory:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"dotnet build src/Nethermind/Nethermind.sln -c release\n")),(0,i.kt)("p",null,"To simply run the client with a specific configuration without building tests, see below."),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"Before running the client or tests, ensure the\nplatform-specific ",(0,i.kt)("a",{parentName:"p",href:"../get-started/installing-nethermind#prerequisites"},"prerequisites")," are met.")),(0,i.kt)("h4",{id:"running-the-client"},"Running the client"),(0,i.kt)("p",null,"To launch the client, run the following command from the project's root directory (the previous step of the build is not\nrequired):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"cd src/Nethermind/Nethermind.Runner\ndotnet run -c release -- -c mainnet\n")),(0,i.kt)("p",null,"All Nethermind-specific parameters can be specified after ",(0,i.kt)("inlineCode",{parentName:"p"},"--"),". For instance, the command above specifies the Mainnet\nconfiguration only."),(0,i.kt)("p",null,"The build artifacts can be found in the ",(0,i.kt)("inlineCode",{parentName:"p"},"bin/release/net7.0")," directory. By default, the logs and database directories\nare located here as well."),(0,i.kt)("p",null,"For more info, see ",(0,i.kt)("a",{parentName:"p",href:"/docs/fundamentals/running-nethermind"},"Running Nethermind"),"."),(0,i.kt)("h4",{id:"testing"},"Testing"),(0,i.kt)("p",null,"There are two test suites \u2014 Nethermind and Ethereum Foundation. Tests can be run with the following commands (the\ninitial step of the build is not required):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"cd src/Nethermind\n\n# Run Nethermind tests\ndotnet test Nethermind.sln -c release\n\n# Run Ethereum Foundation tests\ndotnet test EthereumTests.sln -c release\n")),(0,i.kt)("h2",{id:"bulding-docker-image"},"Bulding Docker image"),(0,i.kt)("p",null,"To build Nethermind Docker image, run the following command from the project's root directory:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"docker build -t nethermind .\n")),(0,i.kt)("p",null,"For more info about running Docker containers,\nsee ",(0,i.kt)("a",{parentName:"p",href:"../get-started/installing-nethermind#docker-container"},"Installing Nethermind"),"."))}p.isMDXComponent=!0}}]);
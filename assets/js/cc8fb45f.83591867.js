"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5925],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=p(n),c=a,f=m["".concat(s,".").concat(c)]||m[c]||d[c]||i;return n?r.createElement(f,o(o({ref:t},u),{},{components:n})):r.createElement(f,o({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},1815:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const i={title:"Running Nethermind",sidebar_position:0},o=void 0,l={unversionedId:"fundamentals/running-nethermind",id:"fundamentals/running-nethermind",title:"Running Nethermind",description:"To get the latest Nethermind version, see Installing Nethermind.",source:"@site/docs/fundamentals/running-nethermind.md",sourceDirName:"fundamentals",slug:"/fundamentals/running-nethermind",permalink:"/docs/fundamentals/running-nethermind",draft:!1,editUrl:"https://github.com/NethermindEth/docs/tree/main/docs/docs/fundamentals/running-nethermind.md",tags:[],version:"current",lastUpdatedAt:1698272496,formattedLastUpdatedAt:"Oct 25, 2023",sidebarPosition:0,frontMatter:{title:"Running Nethermind",sidebar_position:0},sidebar:"tutorialSidebar",previous:{title:"Migrating from Geth",permalink:"/docs/get-started/migrating-from-geth"},next:{title:"Configuration",permalink:"/docs/fundamentals/configuration"}},s={},p=[{value:"Supported networks",id:"supported-networks",level:2}],u={toc:p},m="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"To get the latest Nethermind version, see ",(0,a.kt)("a",{parentName:"p",href:"/docs/get-started/installing-nethermind"},"Installing Nethermind"),".")),(0,a.kt)("p",null,"Nethermind is mainly controlled by command line options (aka arguments or flags)."),(0,a.kt)("p",null,"The full list of options can be displayed by running:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"nethermind -h\n")),(0,a.kt)("p",null,"For instance, to launch the client with the default configuration for the Mainnet and custom data directory, run:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"nethermind -c mainnet -dd path/to/data/dir\n")),(0,a.kt)("p",null,"For detailed info about the available configuration options, see ",(0,a.kt)("a",{parentName:"p",href:"/docs/fundamentals/configuration"},"Configuration"),"."),(0,a.kt)("h2",{id:"supported-networks"},"Supported networks"),(0,a.kt)("p",null,"To run Nethermind on a specific network, use the ",(0,a.kt)("a",{parentName:"p",href:"/docs/fundamentals/configuration#basic-options"},(0,a.kt)("inlineCode",{parentName:"a"},"-c, --config"))," command line option. Currently, the following networks are supported out of the box:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Chiado")," (testnet)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Energy Web")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Exosama")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Goerli")," (testnet)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Gnosis")," "),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Holesky")," (testnet)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Mainnet")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Sepolia")," (testnet)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Volta")," (testnet)")))}d.isMDXComponent=!0}}]);
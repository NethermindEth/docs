"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3988],{3905:(t,e,r)=>{r.d(e,{Zo:()=>d,kt:()=>N});var n=r(7294);function a(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function o(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function l(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?o(Object(r),!0).forEach((function(e){a(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function i(t,e){if(null==t)return{};var r,n,a=function(t,e){if(null==t)return{};var r,n,a={},o=Object.keys(t);for(n=0;n<o.length;n++)r=o[n],e.indexOf(r)>=0||(a[r]=t[r]);return a}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(n=0;n<o.length;n++)r=o[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(a[r]=t[r])}return a}var m=n.createContext({}),p=function(t){var e=n.useContext(m),r=e;return t&&(r="function"==typeof t?t(e):l(l({},e),t)),r},d=function(t){var e=p(t.components);return n.createElement(m.Provider,{value:e},t.children)},c="mdxType",f={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},s=n.forwardRef((function(t,e){var r=t.components,a=t.mdxType,o=t.originalType,m=t.parentName,d=i(t,["components","mdxType","originalType","parentName"]),c=p(r),s=a,N=c["".concat(m,".").concat(s)]||c[s]||f[s]||o;return r?n.createElement(N,l(l({ref:e},d),{},{components:r})):n.createElement(N,l({ref:e},d))}));function N(t,e){var r=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var o=r.length,l=new Array(o);l[0]=s;var i={};for(var m in e)hasOwnProperty.call(e,m)&&(i[m]=e[m]);i.originalType=t,i[c]="string"==typeof t?t:a,l[1]=i;for(var p=2;p<o;p++)l[p]=r[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}s.displayName="MDXCreateElement"},9496:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>m,contentTitle:()=>l,default:()=>f,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const o={},l="Evm",i={unversionedId:"monitoring/metrics-explanation/evm",id:"monitoring/metrics-explanation/evm",title:"Evm",description:"| Metric | Description |",source:"@site/docs/04-monitoring/metrics-explanation/evm.md",sourceDirName:"04-monitoring/metrics-explanation",slug:"/monitoring/metrics-explanation/evm",permalink:"/docs/monitoring/metrics-explanation/evm",draft:!1,editUrl:"https://github.com/NethermindEth/docs/tree/main/docs/docs/04-monitoring/metrics-explanation/evm.md",tags:[],version:"current",lastUpdatedAt:1692717057,formattedLastUpdatedAt:"Aug 22, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Using dotnet-counters",permalink:"/docs/monitoring/metrics-explanation/dotnet-counters"},next:{title:"Init",permalink:"/docs/monitoring/metrics-explanation/init"}},m={},p=[],d={toc:p},c="wrapper";function f(t){let{components:e,...r}=t;return(0,a.kt)(c,(0,n.Z)({},d,r,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"evm"},"Evm"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Metric"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"nethermind_blockhash_opcode"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Number of BLOCKHASH opcodes executed.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"nethermind_bn254_add_precompile"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Number of BN254_ADD precompile calls.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"nethermind_bn254_mul_precompile"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Number of BN254_MUL precompile calls.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"nethermind_bn254_pairing_precompile"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Number of BN254_PAIRING precompile calls.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"nethermind_calls"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Number of calls to other contracts.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"nethermind_creates"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Number of contract create calls.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"nethermind_ec_recover_precompile"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Number of EC_RECOVERY precompile calls.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"nethermind_empty_calls"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Number of calls made to addresses without code.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"nethermind_evm_exceptions"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Number of EVM exceptions thrown by contracts.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"nethermind_m_copy_opcode"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Number of MCOPY opcodes executed.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"nethermind_mod_exp_opcode"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Number of MODEXP precompiles executed.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"nethermind_mod_exp_precompile"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Number of MODEXP precompile calls.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"nethermind_point_evaluation_precompile"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Number of Point Evaluation precompile calls.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"nethermind_ripemd160_precompile"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Number of RIPEMD160 precompile calls.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"nethermind_self_destructs"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Number of SELFDESTRUCT calls.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"nethermind_sha256_precompile"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Number of SHA256 precompile calls.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"nethermind_sload_opcode"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Number of SLOAD opcodes executed.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"nethermind_sstore_opcode"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Number of SSTORE opcodes executed.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"nethermind_tload_opcode"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Number of TLOAD opcodes executed.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"nethermind_tstore_opcode"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Number of TSTORE opcodes executed.")))))}f.isMDXComponent=!0}}]);
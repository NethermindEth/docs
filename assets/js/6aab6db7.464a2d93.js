"use strict";(self.webpackChunknethermind_docs=self.webpackChunknethermind_docs||[]).push([[8326],{633:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>l,metadata:()=>r,toc:()=>h});const r=JSON.parse('{"id":"interacting/json-rpc-server","title":"JSON-RPC server","description":"Interacting with Nethermind requires using the JSON-RPC 2.0 protocol. Nethermind provides JSON-RPC over HTTP,  WebSocket, and IPC socket transports. Each transport must be enabled with the respective configuration option, as shown below. For more details, see the JSON-RPC configuration options.","source":"@site/docs/interacting/json-rpc-server.md","sourceDirName":"interacting","slug":"/interacting/json-rpc-server","permalink":"/next/interacting/json-rpc-server","draft":false,"unlisted":false,"editUrl":"https://github.com/NethermindEth/docs/tree/main/docs/interacting/json-rpc-server.md","tags":[],"version":"current","lastUpdatedAt":1746210719000,"sidebarPosition":0,"frontMatter":{"title":"JSON-RPC server","sidebar_position":0},"sidebar":"tutorialSidebar","previous":{"title":"History expiry","permalink":"/next/fundamentals/history-expiry"},"next":{"title":"admin","permalink":"/next/interacting/json-rpc-ns/admin"}}');var o=t(4848),s=t(8453),a=t(5537),i=t(9329);const l={title:"JSON-RPC server",sidebar_position:0},c=void 0,d={},h=[{value:"Transports",id:"transports",level:2},{value:"HTTP",id:"http",level:3},{value:"WebSocket",id:"websocket",level:3},{value:"IPC socket",id:"ipc-socket",level:3},{value:"Engine API",id:"engine-api",level:2},{value:"Requests",id:"requests",level:2}];function u(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["Interacting with Nethermind requires using the JSON-RPC 2.0 protocol. Nethermind provides JSON-RPC over ",(0,o.jsx)(n.a,{href:"#http",children:"HTTP"}),",  ",(0,o.jsx)(n.a,{href:"#websocket",children:"WebSocket"}),", and ",(0,o.jsx)(n.a,{href:"#ipc-socket",children:"IPC socket"})," transports. Each transport must be enabled with the respective configuration option, as shown below. For more details, see the ",(0,o.jsx)(n.a,{href:"/next/fundamentals/configuration#jsonrpc",children:"JSON-RPC configuration options"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["The JSON-RPC API methods are grouped into several categories (namespaces) depending on their purpose. All API method names are composed of the namespace and the actual method name in that namespace. For instance, the ",(0,o.jsx)(n.code,{children:"eth_call"})," method belongs to the ",(0,o.jsx)(n.code,{children:"eth"})," namespace. See the sidebar for all supported namespaces and methods."]}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsxs)(n.p,{children:["Not all of the JSON-RPC namespaces are enabled by default. Instead, they must be enabled explicitly with the ",(0,o.jsx)(n.a,{href:"/next/fundamentals/configuration#jsonrpc-enabledmodules",children:(0,o.jsx)(n.code,{children:"JsonRpc.EnabledModules"})})," command line option. Otherwise, error code ",(0,o.jsx)(n.code,{children:"-32600"})," is returned. The enabled namespaces can be found in the configuration file specified with the ",(0,o.jsx)(n.a,{href:"/next/fundamentals/configuration#config",children:(0,o.jsx)(n.code,{children:"-c, --config"})})," command line option."]})}),"\n",(0,o.jsx)(n.h2,{id:"transports",children:"Transports"}),"\n",(0,o.jsxs)(n.admonition,{type:"tip",children:[(0,o.jsx)(n.p,{children:"The right choice of transport depends on the specific use case."}),(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"HTTP is a familiar and idempotent transport that closes connections between requests and can, therefore, have lower overall overhead for a relatively low number of requests."}),"\n",(0,o.jsx)(n.li,{children:"WebSocket provides a continuous open channel that enables event subscriptions and streaming and handles large volumes of requests with more negligible per-message overhead."}),"\n",(0,o.jsx)(n.li,{children:"IPC is generally the most secure as it is limited to local interactions and cannot be exposed to external traffic. It can also be used for event subscriptions."}),"\n"]})]}),"\n",(0,o.jsx)(n.h3,{id:"http",children:"HTTP"}),"\n",(0,o.jsxs)(n.p,{children:["HTTP is the most widely used transport for Nethermind. To enable the HTTP server, set the ",(0,o.jsx)(n.a,{href:"/next/fundamentals/configuration#jsonrpc-enabled",children:(0,o.jsx)(n.code,{children:"JsonRpc.Enabled"})})," configuration option to ",(0,o.jsx)(n.code,{children:"true"}),". By default, Nethermind uses local loopback (",(0,o.jsx)(n.code,{children:"127.0.0.1"})," or ",(0,o.jsx)(n.code,{children:"localhost"}),") and ",(0,o.jsx)(n.code,{children:"8545"})," port. To use a different host or port, set the ",(0,o.jsx)(n.a,{href:"/next/fundamentals/configuration#jsonrpc-host",children:(0,o.jsx)(n.code,{children:"JsonRpc.Host"})})," and ",(0,o.jsx)(n.a,{href:"/next/fundamentals/configuration#jsonrpc-port",children:(0,o.jsx)(n.code,{children:"JsonRpc.Port"})})," configuration options, respectively."]}),"\n",(0,o.jsx)(n.h3,{id:"websocket",children:"WebSocket"}),"\n",(0,o.jsxs)(n.p,{children:["The configuration of the WebSocket server follows the same pattern as the HTTP server. The WebSocket server is enabled automatically when the HTTP server is enabled and uses the same host and port. To disable the WebSocket server, set the ",(0,o.jsx)(n.a,{href:"/next/fundamentals/configuration#init-websocketsenabled",children:(0,o.jsx)(n.code,{children:"Init.WebSocketsEnabled"})})," configuration option to ",(0,o.jsx)(n.code,{children:"false"}),". To use a different a port, set the ",(0,o.jsx)(n.a,{href:"/next/fundamentals/configuration#jsonrpc-websocketsport",children:(0,o.jsx)(n.code,{children:"JsonRpc.WebSocketsPort"})})," configuration option."]}),"\n",(0,o.jsx)(n.h3,{id:"ipc-socket",children:"IPC socket"}),"\n",(0,o.jsxs)(n.p,{children:["Nethermind uses IPC based on Unix domain socket. To enable the IPC server, use the ",(0,o.jsx)(n.a,{href:"/next/fundamentals/configuration#jsonrpc-ipcunixdomainsocketpath",children:(0,o.jsx)(n.code,{children:"JsonRpc.IpcUnixDomainSocketPath"})})," configuration option. For example:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"--jsonrpc-ipcunixdomainsocketpath path/to/ipc\n"})}),"\n",(0,o.jsxs)(n.p,{children:["If the ",(0,o.jsx)(n.code,{children:"path/to/ipc"})," doesn't exist, Nethermind creates one."]}),"\n",(0,o.jsx)(n.h2,{id:"engine-api",children:"Engine API"}),"\n",(0,o.jsx)(n.p,{children:"The Engine API is a set of RPC methods that enable communication between an execution and consensus client. The clients call these methods automatically when they need to exchange information. Engine API is enabled automatically by default and is not designed to be exposed to the user."}),"\n",(0,o.jsxs)(n.p,{children:["By default, the Engine API uses local loopback (",(0,o.jsx)(n.code,{children:"127.0.0.1"})," or ",(0,o.jsx)(n.code,{children:"localhost"}),") and ",(0,o.jsx)(n.code,{children:"8551"})," port. To use a different host or port, set the ",(0,o.jsx)(n.a,{href:"/next/fundamentals/configuration#jsonrpc-enginehost",children:(0,o.jsx)(n.code,{children:"JsonRpc.EngineHost"})})," and ",(0,o.jsx)(n.a,{href:"/next/fundamentals/configuration#jsonrpc-engineport",children:(0,o.jsx)(n.code,{children:"JsonRpc.EnginePort"})})," configuration options, respectively. For example, this can be useful when execution and consensus clients are on different machines."]}),"\n",(0,o.jsx)(n.admonition,{title:"Important",type:"warning",children:(0,o.jsxs)(n.p,{children:["When the ",(0,o.jsx)(n.code,{children:"JsonRpc.EngineHost"})," option is specified, the ",(0,o.jsx)(n.code,{children:"JsonRpc.EnginePort"})," option must be specified as well."]})}),"\n",(0,o.jsxs)(n.p,{children:["The Engine API uses JWT authentication and requires a JWT secret. By default, Nethermind creates one at ",(0,o.jsx)(n.code,{children:"keystore/jwt-secret"})," path in its root directory. To use a different path, specify the ",(0,o.jsx)(n.a,{href:"/next/fundamentals/configuration#jsonrpc-jwtsecretfile",children:(0,o.jsx)(n.code,{children:"JsonRpc.JwtSecretFile"})})," configuration option."]}),"\n",(0,o.jsx)(n.h2,{id:"requests",children:"Requests"}),"\n",(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsx)(n.p,{children:"As per the JSON-RPC 2.0 specification, Nethermind supports batch requests. Specifics depend on the JSON-RPC client used."})}),"\n",(0,o.jsx)(n.p,{children:"Multiple options are available for JSON-RPC interaction from curl and Postman for raw requests to dedicated libraries such as Ethers.js and Viem, to name a few."}),"\n",(0,o.jsx)(n.p,{children:"The following examples demonstrate how to make JSON-RPC requests with the abovementioned libraries."}),"\n",(0,o.jsxs)(a.A,{groupId:"lib",children:[(0,o.jsxs)(i.A,{value:"ethers",label:"Ethers.js",children:[(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsx)(n.p,{children:"Examples are based on Ethers.js v6."})}),(0,o.jsxs)(n.p,{children:["The following example uses the ",(0,o.jsx)(n.a,{href:"/next/interacting/json-rpc-ns/eth#eth_getbalance",children:(0,o.jsx)(n.code,{children:"eth_getBalance"})})," method to check the balance of the specified account:"]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"import { JsonRpcProvider, formatEther } from 'ethers';\n\n// Assuming Nethermind is running locally using the default port of 8545\nconst provider = new JsonRpcProvider('http://localhost:8545');\n\n// Use the low level API to send a request.\nlet balance = await provider.send('eth_getBalance', ['0x00000000219ab540356cbb839cbe05303d7705fa', 'latest']);\nconsole.log('Balance:', formatEther(balance));\n\n// Use the high level API to send a request.\n// Note that the return type may differ from the one of the low level API.\nbalance = await provider.getBalance('0x00000000219ab540356cbb839cbe05303d7705fa', 'latest');\nconsole.log('Balance:', formatEther(balance));\n"})}),(0,o.jsxs)(n.p,{children:["Similarly, we can use the ",(0,o.jsx)(n.a,{href:"/next/interacting/json-rpc-ns/eth#eth_getblockbynumber",children:(0,o.jsx)(n.code,{children:"eth_getBlockByNumber"})})," method to fetch the specified block data, including transactions:"]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"import { JsonRpcProvider } from 'ethers';\n\n// Assuming Nethermind is running locally using the default port of 8545\nconst provider = new JsonRpcProvider('http://localhost:8545');\n\n// Use the low level API to send a request\nlet block = await provider.send('eth_getBlockByNumber', ['latest', true]);\nconsole.log('Block:', block);\n\n// Use the high level API to send a request.\n// Note that the return type may differ from the one of the low level API.\n// Not all JSON-RPC methods have their respective high level API.\nblock = await provider.getBlock('latest', true);\nconsole.log('Block:', block);\n"})}),(0,o.jsxs)(n.p,{children:["For more information, see ",(0,o.jsx)(n.a,{href:"https://docs.ethers.org/v6/",children:"Ethers.js documentation"}),"."]})]}),(0,o.jsxs)(i.A,{value:"viem",label:"Viem",children:[(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsx)(n.p,{children:"Examples are based on Viem v2."})}),(0,o.jsxs)(n.p,{children:["The following example uses the ",(0,o.jsx)(n.a,{href:"/next/interacting/json-rpc-ns/eth#eth_getbalance",children:(0,o.jsx)(n.code,{children:"eth_getBalance"})})," method to check the balance of the specified account:"]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"import { createPublicClient, http, formatEther, hexToNumber } from 'viem';\nimport { localhost } from 'viem/chains';\n\n// Assuming Nethermind is running locally using the default port of 8545\nconst client = createPublicClient({\n    chain: localhost,\n    transport: http('http://localhost:8545'),\n});\n\n// Use the low level API to send a request\nlet balance = await client.request({\n    method: 'eth_getBalance',\n    params: ['0x00000000219ab540356cbb839cbe05303d7705fa', 'latest'],\n});\nconsole.log('Balance:', formatEther(hexToNumber(balance)));\n\n// Use the high level API to send a request.\n// Note that the return type may differ from the one of the low level API.\n// Not all JSON-RPC methods have their respective high level API.\nbalance = await client.getBalance({\n    address: '0x00000000219ab540356cbb839cbe05303d7705fa',\n    blockTag: 'latest'\n});\nconsole.log('Balance:', formatEther(balance));\n"})}),(0,o.jsxs)(n.p,{children:["Similarly, we can use the ",(0,o.jsx)(n.a,{href:"/next/interacting/json-rpc-ns/eth#eth_getblockbynumber",children:(0,o.jsx)(n.code,{children:"eth_getBlockByNumber"})})," method to fetch the specified block data, including transactions:"]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"import { createPublicClient, http } from 'viem';\nimport { localhost } from 'viem/chains';\n\n// Assuming Nethermind is running locally using the default port of 8545\nconst client = createPublicClient({\n    chain: localhost,\n    transport: http('http://localhost:8545'),\n});\n\n// Use the low level API to send a request\nlet block = await client.request({\n    method: 'eth_getBlockByNumber',\n    params: ['latest', true],\n});\nconsole.log('Block:', block);\n\n// Use the high level API to send a request\nblock = await client.getBlock({\n    blockTag: 'latest',\n    includeTransactions: true\n});\nconsole.log('Block:', block);\n"})}),(0,o.jsxs)(n.p,{children:["For more information, see ",(0,o.jsx)(n.a,{href:"https://viem.sh/docs/getting-started",children:"Viem documentation"}),"."]})]})]}),"\n",(0,o.jsx)(n.p,{children:"The exhaustive list of supported JSON-RPC methods can be found under the JSON-RPC namespaces."})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},5537:(e,n,t)=>{t.d(n,{A:()=>P});var r=t(6540),o=t(4164),s=t(5627),a=t(6347),i=t(372),l=t(604),c=t(1861),d=t(8749);function h(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return h(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:o}}=e;return{value:n,label:t,attributes:r,default:o}}))}(t);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const o=(0,a.W6)(),s=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,l.aZ)(s),(0,r.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(o.location.search);n.set(s,e),o.replace({...o.location,search:n.toString()})}),[s,o])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:o}=e,s=u(e),[a,l]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:s}))),[c,h]=m({queryString:t,groupId:o}),[f,b]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[o,s]=(0,d.Dv)(t);return[o,(0,r.useCallback)((e=>{t&&s.set(e)}),[t,s])]}({groupId:o}),x=(()=>{const e=c??f;return p({value:e,tabValues:s})?e:null})();(0,i.A)((()=>{x&&l(x)}),[x]);return{selectedValue:a,selectValue:(0,r.useCallback)((e=>{if(!p({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),h(e),b(e)}),[h,b,s]),tabValues:s}}var b=t(9136);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var g=t(4848);function j(e){let{className:n,block:t,selectedValue:r,selectValue:a,tabValues:i}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.a_)(),d=e=>{const n=e.currentTarget,t=l.indexOf(n),o=i[t].value;o!==r&&(c(n),a(o))},h=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":t},n),children:i.map((e=>{let{value:n,label:t,attributes:s}=e;return(0,g.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>{l.push(e)},onKeyDown:h,onClick:d,...s,className:(0,o.A)("tabs__item",x.tabItem,s?.className,{"tabs__item--active":r===n}),children:t??n},n)}))})}function v(e){let{lazy:n,children:t,selectedValue:s}=e;const a=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=a.find((e=>e.props.value===s));return e?(0,r.cloneElement)(e,{className:(0,o.A)("margin-top--md",e.props.className)}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:a.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function w(e){const n=f(e);return(0,g.jsxs)("div",{className:(0,o.A)("tabs-container",x.tabList),children:[(0,g.jsx)(j,{...n,...e}),(0,g.jsx)(v,{...n,...e})]})}function P(e){const n=(0,b.A)();return(0,g.jsx)(w,{...e,children:h(e.children)},String(n))}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>i});var r=t(6540);const o={},s=r.createContext(o);function a(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),r.createElement(s.Provider,{value:n},e.children)}},9329:(e,n,t)=>{t.d(n,{A:()=>a});t(6540);var r=t(4164);const o={tabItem:"tabItem_Ymn6"};var s=t(4848);function a(e){let{children:n,hidden:t,className:a}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,r.A)(o.tabItem,a),hidden:t,children:n})}}}]);
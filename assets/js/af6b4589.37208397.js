"use strict";(self.webpackChunknethermind_docs=self.webpackChunknethermind_docs||[]).push([[499],{436:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>d});var i=s(5893),t=s(1151);const o={title:"Aura Validator",sidebar_position:1},r=void 0,a={id:"validators/aura-validator",title:"Aura Validator",description:"This article will lead you through docker-compose setup of Nethermind Aura Validator (xDai chain in this example).",source:"@site/docs/validators/aura-validator.md",sourceDirName:"validators",slug:"/validators/aura-validator",permalink:"/docs/validators/aura-validator",draft:!1,unlisted:!1,editUrl:"https://github.com/NethermindEth/docs/tree/main/docs/docs/validators/aura-validator.md",tags:[],version:"current",lastUpdatedAt:1698949521,formattedLastUpdatedAt:"Nov 2, 2023",sidebarPosition:1,frontMatter:{title:"Aura Validator",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Eth2 Validator",permalink:"/docs/validators/eth2-validator"},next:{title:"Building from source",permalink:"/docs/developers/building-from-source"}},c={},d=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Clock synchronization",id:"clock-synchronization",level:2},{value:"Docker-compose file sample",id:"docker-compose-file-sample",level:2},{value:"Mining <strong>P</strong>rivate key",id:"mining-private-key",level:2},{value:"Config file",id:"config-file",level:2},{value:"Running Validator node",id:"running-validator-node",level:2}];function l(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h2:"h2",img:"img",input:"input",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["This article will lead you through docker-compose setup of ",(0,i.jsx)(n.strong,{children:"Nethermind Aura Validator"})," (xDai chain in this example).\nSame result can be obtained\nby ",(0,i.jsx)(n.a,{href:"/docs/get-started/installing-nethermind",children:"Downloading"})," & ",(0,i.jsx)(n.a,{href:"/docs/get-started/installing-nethermind#running",children:"Running Nethermind"}),"\npackage or by ",(0,i.jsx)(n.a,{href:"/docs/developers/building-from-source",children:"Building Nethermind"})," from the source code. "]}),"\n",(0,i.jsxs)(n.p,{children:["If you chose not to use docker-compose, you can skip docker-compose related sections and read\nabout ",(0,i.jsx)(n.a,{href:"/docs/validators/aura-validator#config-file",children:"config file"})," and ",(0,i.jsx)(n.a,{href:"/docs/validators/aura-validator#mining-private-key",children:"private key "}),"configuration\nonly."]}),"\n",(0,i.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ","docker-compose"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ","docker"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ","machine with at least 4GB RAM is recommended"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo apt-get install docker docker-compose -y\n"})}),"\n",(0,i.jsx)(n.h2,{id:"clock-synchronization",children:"Clock synchronization"}),"\n",(0,i.jsxs)(n.p,{children:["You system clock needs to be synchronized otherwise you might encounter skipping block sealing. By\ndefault ",(0,i.jsx)(n.code,{children:"stepDuration"})," is configured to ",(0,i.jsx)(n.code,{children:"5s"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Verify if your system clock is synchronized, type ",(0,i.jsx)(n.code,{children:"timedatectl status"})," and you should see similar output:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"Local time: Tue 2020-06-30 17:16:19 UTC\nUniversal time: Tue 2020-06-30 17:16:19 UTC\nRTC time: Tue 2020-06-30 17:16:19\nTime zone: Etc/UTC (UTC, +0000)\nSystem clock synchronized: yes\nsystemd-timesyncd.service active: yes\nRTC in local TZ: no\n"})}),"\n",(0,i.jsxs)(n.p,{children:["If ",(0,i.jsx)(n.code,{children:"System clock synchronized"})," displays ",(0,i.jsx)(n.code,{children:"yes"})," you are all set, otherwise you may need to either:"]}),"\n",(0,i.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ","synchronize clock with NTP servers (allow ",(0,i.jsx)(n.strong,{children:"UDP"})," port ",(0,i.jsx)(n.strong,{children:"123"})," for both incoming and outgoing traffic)"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ","use below script to sync with google.com:"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Create ",(0,i.jsx)(n.code,{children:"fixtime.sh"})," script and run it with ",(0,i.jsx)(n.code,{children:"watch -n 60"})," command in a ",(0,i.jsx)(n.code,{children:"screen"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"echo sudo date -s '\"$(wget -qSO- --max-redirect=0 google.com 2>&1 | grep Date: | cut -d' ' -f5-8)Z\"' > fixtime.sh\nchmod +x fixtime.sh\nscreen -S time\nwatch -n 60 ./fixtime.sh\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Press ",(0,i.jsx)(n.code,{children:"Ctrl+A+D"})," to leave the ",(0,i.jsx)(n.code,{children:"screen"})]}),"\n",(0,i.jsx)(n.h2,{id:"docker-compose-file-sample",children:"Docker-compose file sample"}),"\n",(0,i.jsxs)(n.p,{children:["Create and edit",(0,i.jsx)(n.code,{children:"docker-compose.yml"})," file"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"nano docker-compose.yml\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'title="docker-compose.yml" ',children:"\nversion: '3.5'\n\nservices:\n  nethermind-validator:\n    image: nethermind/nethermind\n    container_name: nethermind-validator\n    restart: unless-stopped\n    ports:\n      - 8545:8545\n      - 30303:30303\n    network_mode: host\n    environment:\n      - NETHERMIND_CONFIG=xdai\n    volumes:\n      - ${PWD}/nethermind_db:/nethermind/nethermind_db\n      - ${PWD}/keystore:/nethermind/keystore\n      - ${PWD}/logs:/nethermind/logs\n      - ${PWD}/xdai.cfg:/nethermind/configs/xdai.cfg\n      - ${PWD}/NLog.config:/nethermind/NLog.config\n      - ${PWD}/static-nodes.json:/nethermind/Data/static-nodes.json\n\nvolumes:\n  nethermind_db:\n    driver: local\n    name: nethermind_db\n  keystore:\n    driver: local\n    name: keystore\n  logs:\n    driver: local\n    name: logs\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Configure Nethermind node via environment variables or use local config file and map it to the one, existing inside\ncontainer (",(0,i.jsx)(n.code,{children:"xdai.cfg"})," file in above example)."]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["Make sure that ",(0,i.jsx)(n.code,{children:"nethermind_db"}),", ",(0,i.jsx)(n.code,{children:"keystore"}),"(",(0,i.jsx)(n.code,{children:"logs"})," - optional ) are mapped, otherwise you might lose database or keys"]})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/docs/get-started/installing-nethermind#running",children:(0,i.jsx)(n.code,{children:"NLog.config"})})," file is optional.",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.a,{href:"/docs/get-started/installing-nethermind#running",children:(0,i.jsx)(n.code,{children:"static-nodes.json"})})," can be filled with an\narray\nof enodes, this is also optional."]}),"\n",(0,i.jsxs)(n.h2,{id:"mining-private-key",children:["Mining ",(0,i.jsx)(n.strong,{children:"P"}),"rivate key"]}),"\n",(0,i.jsxs)(n.admonition,{type:"danger",children:[(0,i.jsxs)(n.p,{children:["Make sure that the filename contains key's ",(0,i.jsx)(n.strong,{children:"public address"})," otherwise it won't be recognized by Nethermind Client as a\nkeyfile.",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.br,{}),"\n","Correct naming of a ",(0,i.jsx)(n.code,{children:"keyfile"}),": ",(0,i.jsx)(n.strong,{children:"key-a5237f7f43cc46cba43ac212dabd0c45e3e3050a"})]}),(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"keyfile"})," should be then stored inside ",(0,i.jsx)(n.code,{children:"keystore"})," volume."]})]}),"\n",(0,i.jsx)(n.h2,{id:"config-file",children:"Config file"}),"\n",(0,i.jsx)(n.p,{children:"Things to be configured:"}),"\n",(0,i.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,i.jsx)(n.code,{children:"Init.IsMining"})," true"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,i.jsx)(n.code,{children:"Init.MemoryHint"})," can be left default, recommended to configure it accordingly to the machine hardware setup (\nfor ",(0,i.jsx)(n.code,{children:"xdai"})," 1000000000 is enough)"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,i.jsx)(n.code,{children:"EthStats"})," section if you wish to report node status to the ethstats page for a given network"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,i.jsx)(n.code,{children:"Metrics"})," section if running\nlocal/remote ",(0,i.jsx)(n.a,{href:"/docs/monitoring/metrics/setting-up-local-metrics-infrastracture",children:"Metrics infrastructure"})]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,i.jsx)(n.code,{children:"KeyStore.PasswordFiles"})," path to the file containing password for ",(0,i.jsx)(n.strong,{children:"mining private key"})]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,i.jsx)(n.code,{children:"KeyStore.UnlockAccounts"})," an array of accounts, provide ",(0,i.jsx)(n.strong,{children:"mining public address"})," here"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,i.jsx)(n.code,{children:"KeyStore.BlockAuthorAccount"})," ",(0,i.jsx)(n.strong,{children:"mining public address"})," should be provided here as well"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,i.jsx)(n.code,{children:"Aura.ForceSealing"})," set to true"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",metastring:'title="xdai.cfg" ',children:'\n{\n  "Init": {\n    "WebSocketsEnabled": false,\n    "StoreReceipts": true,\n    "IsMining": true,\n    "ChainSpecPath": "chainspec/xdai.json",\n    "GenesisHash": "0x4f1dd23188aab3a76b463e4af801b52b1248ef073c648cbdc4c9333d3da79756",\n    "BaseDbPath": "nethermind_db/xdai",\n    "LogFileName": "xdai.logs.txt",\n    "MemoryHint": 3000000000,\n    "StaticNodesPath": "Data/static-nodes.json"\n  },\n  "Network": {\n    "DiscoveryPort": 30303,\n    "P2PPort": 30303\n  },\n  "JsonRpc": {\n    "Enabled": false,\n    "Host": "127.0.0.1",\n    "Port": 8545,\n    "WebSocketsPort": 8546\n  },\n  "Db": {\n    "HeadersDbCacheIndexAndFilterBlocks": false,\n    "BlocksDbCacheIndexAndFilterBlocks": false,\n    "ReceiptsDbCacheIndexAndFilterBlocks": false,\n    "BlockInfosDbCacheIndexAndFilterBlocks": false\n  },\n  "Sync": {\n    "FastSync": true,\n    "PivotNumber": 10410000,\n    "PivotHash": "0x806f498fdde010f25bd3beb18e6f8a9c9450752f8c0e27da2cd2465ff184628c",\n    "PivotTotalDifficulty": "3542339439646969404653729663364707080928280566",\n    "FastBlocks": true,\n    "UseGethLimitsInFastBlocks": false,\n    "FastSyncCatchUpHeightDelta": 10000000000\n  },\n  "EthStats": {\n    "Enabled": false,\n    "Server": "ws://localhost:3000/api",\n    "Name": "Nethermind xDai",\n    "Secret": "secret",\n    "Contact": "hello@nethermind.io"\n  },\n  "Metrics": {\n    "NodeName": "Nethermind xDai",\n    "Enabled": false,\n    "PushGatewayUrl": "http://localhost:9091/metrics",\n    "IntervalSeconds": 5\n  },\n  "KeyStore": {\n    "PasswordFiles": [\n      "keystore/password.file"\n    ],\n    "UnlockAccounts": [\n      "0x..."\n    ],\n    "BlockAuthorAccount": "0x..."\n  },\n  "Aura": {\n    "ForceSealing": true\n  },\n  "Bloom": {\n    "IndexLevelBucketSizes": [\n      16,\n      16,\n      16\n    ]\n  }\n}\n\n'})}),"\n",(0,i.jsx)(n.h2,{id:"running-validator-node",children:"Running Validator node"}),"\n",(0,i.jsx)(n.p,{children:"Run it with a simple docker-compose command."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"docker-compose up -d\n"})}),"\n",(0,i.jsxs)(n.p,{children:["You will need to wait for the node to be fully ",(0,i.jsx)(n.strong,{children:"synchronized"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["To check the logs and verify if it is sealing blocks as expected (look for the ",(0,i.jsx)(n.code,{children:"Sealed block"})," log)."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"docker-compose logs -f nethermind-validator\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:s(9336).Z+"",width:"893",height:"340"})})]})}function h(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},9336:(e,n,s)=>{s.d(n,{Z:()=>i});const i=s.p+"assets/images/image(37)-af8260f3a196744f9d905fb241639318.png"},1151:(e,n,s)=>{s.d(n,{Z:()=>a,a:()=>r});var i=s(7294);const t={},o=i.createContext(t);function r(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);
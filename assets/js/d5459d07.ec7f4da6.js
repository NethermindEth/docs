"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1985],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>f});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(r),m=i,f=u["".concat(s,".").concat(m)]||u[m]||d[m]||a;return r?n.createElement(f,o(o({ref:t},c),{},{components:r})):n.createElement(f,o({ref:t},c))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:i,o[1]=l;for(var p=2;p<a;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},8737:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var n=r(7462),i=(r(7294),r(3905));const a={description:"Networks currently supported by Nethermind Client",sidebar_position:3},o="Networks",l={unversionedId:"get-started/networks",id:"get-started/networks",title:"Networks",description:"Networks currently supported by Nethermind Client",source:"@site/docs/get-started/networks.md",sourceDirName:"get-started",slug:"/get-started/networks",permalink:"/docs/get-started/networks",draft:!1,editUrl:"https://github.com/NethermindEth/docs/tree/main/docs/docs/get-started/networks.md",tags:[],version:"current",lastUpdatedAt:1692227448,formattedLastUpdatedAt:"Aug 16, 2023",sidebarPosition:3,frontMatter:{description:"Networks currently supported by Nethermind Client",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Installing Nethermind",permalink:"/docs/get-started/installing-nethermind"},next:{title:"Migrating From Geth",permalink:"/docs/get-started/migrating-from-geth"}},s={},p=[{value:"Mainnet",id:"mainnet",level:3},{value:"G\xf6rli (goerli)",id:"g\xf6rli-goerli",level:3}],c={toc:p},u="wrapper";function d(e){let{components:t,...r}=e;return(0,i.kt)(u,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"networks"},"Networks"),(0,i.kt)("p",null,"By default Nethermind launches with mainnet network configuration, but it is possible to sync other networks by adding a\ncommand line switch:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"--config [NETWORK_NAME]\n")),(0,i.kt)("p",null,"Network name can be any of the following"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"mainnet"),(0,i.kt)("li",{parentName:"ul"},"goerli"),(0,i.kt)("li",{parentName:"ul"},"sepolia"),(0,i.kt)("li",{parentName:"ul"},"gnosis"),(0,i.kt)("li",{parentName:"ul"},"poacore"),(0,i.kt)("li",{parentName:"ul"},"energyweb"),(0,i.kt)("li",{parentName:"ul"},"volta"),(0,i.kt)("li",{parentName:"ul"},"kovan (only fast sync and may fail if pWASM transactions appear)")),(0,i.kt)("h3",{id:"mainnet"},"Mainnet"),(0,i.kt)("p",null,"This is the main Ethereum network. It can be run using config below and this is default setting - mainnet will run\nif ",(0,i.kt)("inlineCode",{parentName:"p"},"--config")," is not specified as well."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Nethermind.Runner --config mainnet\n")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://ethstats.net/"},"Ethereum Mainnet Status")),(0,i.kt)("h3",{id:"g\xf6rli-goerli"},"G\xf6rli (goerli)"),(0,i.kt)("p",null,"This is a Clique-PoA based testnet supported by all major clients. It has 15 seconds between blocks that are sealed by\nGoerli validators."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Nethermind.Runner --config goerli\n")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://stats.goerli.net/"},"Goerli Status")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://gitter.im/goerli/testnet"},"Goerli Gitter Space")))}d.isMDXComponent=!0}}]);
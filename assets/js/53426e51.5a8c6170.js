"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[136],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>N});var n=a(7294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function m(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var p=n.createContext({}),o=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},s=function(e){var t=o(e.components);return n.createElement(p.Provider,{value:t},e.children)},k="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,r=e.originalType,p=e.parentName,s=m(e,["components","mdxType","originalType","parentName"]),k=o(a),d=l,N=k["".concat(p,".").concat(d)]||k[d]||u[d]||r;return a?n.createElement(N,i(i({ref:t},s),{},{components:a})):n.createElement(N,i({ref:t},s))}));function N(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=a.length,i=new Array(r);i[0]=d;var m={};for(var p in t)hasOwnProperty.call(t,p)&&(m[p]=t[p]);m.originalType=e,m[k]="string"==typeof e?e:l,i[1]=m;for(var o=2;o<r;o++)i[o]=a[o];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},5162:(e,t,a)=>{a.d(t,{Z:()=>i});var n=a(7294),l=a(6010);const r={tabItem:"tabItem_Ymn6"};function i(e){let{children:t,hidden:a,className:i}=e;return n.createElement("div",{role:"tabpanel",className:(0,l.Z)(r.tabItem,i),hidden:a},t)}},4866:(e,t,a)=>{a.d(t,{Z:()=>T});var n=a(7462),l=a(7294),r=a(6010),i=a(2466),m=a(6550),p=a(1980),o=a(7392),s=a(12);function k(e){return function(e){return l.Children.map(e,(e=>{if(!e||(0,l.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:l}}=e;return{value:t,label:a,attributes:n,default:l}}))}function u(e){const{values:t,children:a}=e;return(0,l.useMemo)((()=>{const e=t??k(a);return function(e){const t=(0,o.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function d(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function N(e){let{queryString:t=!1,groupId:a}=e;const n=(0,m.k6)(),r=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,p._X)(r),(0,l.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(n.location.search);t.set(r,e),n.replace({...n.location,search:t.toString()})}),[r,n])]}function c(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,r=u(e),[i,m]=(0,l.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!d({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:r}))),[p,o]=N({queryString:a,groupId:n}),[k,c]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,r]=(0,s.Nk)(a);return[n,(0,l.useCallback)((e=>{a&&r.set(e)}),[a,r])]}({groupId:n}),b=(()=>{const e=p??k;return d({value:e,tabValues:r})?e:null})();(0,l.useLayoutEffect)((()=>{b&&m(b)}),[b]);return{selectedValue:i,selectValue:(0,l.useCallback)((e=>{if(!d({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);m(e),o(e),c(e)}),[o,c,r]),tabValues:r}}var b=a(2389);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function h(e){let{className:t,block:a,selectedValue:m,selectValue:p,tabValues:o}=e;const s=[],{blockElementScrollPositionUntilNextRender:k}=(0,i.o5)(),u=e=>{const t=e.currentTarget,a=s.indexOf(t),n=o[a].value;n!==m&&(k(t),p(n))},d=e=>{let t=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const a=s.indexOf(e.currentTarget)+1;t=s[a]??s[0];break}case"ArrowLeft":{const a=s.indexOf(e.currentTarget)-1;t=s[a]??s[s.length-1];break}}t?.focus()};return l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":a},t)},o.map((e=>{let{value:t,label:a,attributes:i}=e;return l.createElement("li",(0,n.Z)({role:"tab",tabIndex:m===t?0:-1,"aria-selected":m===t,key:t,ref:e=>s.push(e),onKeyDown:d,onClick:u},i,{className:(0,r.Z)("tabs__item",g.tabItem,i?.className,{"tabs__item--active":m===t})}),a??t)})))}function C(e){let{lazy:t,children:a,selectedValue:n}=e;const r=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=r.find((e=>e.props.value===n));return e?(0,l.cloneElement)(e,{className:"margin-top--md"}):null}return l.createElement("div",{className:"margin-top--md"},r.map(((e,t)=>(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function y(e){const t=c(e);return l.createElement("div",{className:(0,r.Z)("tabs-container",g.tabList)},l.createElement(h,(0,n.Z)({},e,t)),l.createElement(C,(0,n.Z)({},e,t)))}function T(e){const t=(0,b.Z)();return l.createElement(y,(0,n.Z)({key:String(t)},e))}},542:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>p,default:()=>N,frontMatter:()=>m,metadata:()=>o,toc:()=>k});var n=a(7462),l=(a(7294),a(3905)),r=a(4866),i=a(5162);const m={title:"debug namespace",sidebar_label:"debug",sidebar_position:2},p=void 0,o={unversionedId:"interacting/json-rpc/debug",id:"interacting/json-rpc/debug",title:"debug namespace",description:"debug_deleteChainSlice",source:"@site/docs/interacting/json-rpc/debug.md",sourceDirName:"interacting/json-rpc",slug:"/interacting/json-rpc/debug",permalink:"/docs/interacting/json-rpc/debug",draft:!1,editUrl:"https://github.com/NethermindEth/docs/tree/main/docs/docs/interacting/json-rpc/debug.md",tags:[],version:"current",lastUpdatedAt:1694629282,formattedLastUpdatedAt:"Sep 13, 2023",sidebarPosition:2,frontMatter:{title:"debug namespace",sidebar_label:"debug",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"clique",permalink:"/docs/interacting/json-rpc/clique"},next:{title:"eth",permalink:"/docs/interacting/json-rpc/eth"}},s={},k=[{value:"debug_deleteChainSlice",id:"debug_deletechainslice",level:3},{value:"debug_getBlockRlp",id:"debug_getblockrlp",level:3},{value:"debug_getBlockRlpByHash",id:"debug_getblockrlpbyhash",level:3},{value:"debug_getChainLevel",id:"debug_getchainlevel",level:3},{value:"debug_getConfigValue",id:"debug_getconfigvalue",level:3},{value:"debug_getSyncStage",id:"debug_getsyncstage",level:3},{value:"debug_insertReceipts",id:"debug_insertreceipts",level:3},{value:"debug_migrateReceipts",id:"debug_migratereceipts",level:3},{value:"debug_resetHead",id:"debug_resethead",level:3},{value:"debug_standardTraceBlockToFile",id:"debug_standardtraceblocktofile",level:3},{value:"debug_traceBlock",id:"debug_traceblock",level:3},{value:"debug_traceBlockByHash",id:"debug_traceblockbyhash",level:3},{value:"debug_traceBlockByNumber",id:"debug_traceblockbynumber",level:3},{value:"debug_traceCall",id:"debug_tracecall",level:3},{value:"debug_traceTransaction",id:"debug_tracetransaction",level:3},{value:"debug_traceTransactionByBlockAndIndex",id:"debug_tracetransactionbyblockandindex",level:3},{value:"debug_traceTransactionByBlockhashAndIndex",id:"debug_tracetransactionbyblockhashandindex",level:3},{value:"debug_traceTransactionInBlockByHash",id:"debug_tracetransactioninblockbyhash",level:3},{value:"debug_traceTransactionInBlockByIndex",id:"debug_tracetransactioninblockbyindex",level:3}],u={toc:k},d="wrapper";function N(e){let{components:t,...a}=e;return(0,l.kt)(d,(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h3",{id:"debug_deletechainslice"},"debug_deleteChainSlice"),(0,l.kt)("p",null,"Deletes a slice of a chain from the tree on all branches (Nethermind specific)."),(0,l.kt)(r.Z,{mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"params",label:"Parameters",mdxType:"TabItem"},(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"startNumber"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hex integer)"))),(0,l.kt)(i.Z,{value:"request",label:"Request",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl localhost:8545 \\\n  -X POST \\\n  -H "Content-Type: application/json" \\\n  --data \'{\n      "jsonrpc": "2.0",\n      "id": 0,\n      "method": "debug_deleteChainSlice",\n      "params": [startNumber]\n    }\'\n'))),(0,l.kt)(i.Z,{value:"response",label:"Response",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": 0,\n  "result": result\n}\n')),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"result"),": ",(0,l.kt)("em",{parentName:"p"},"string")," (hex integer)"))),(0,l.kt)("h3",{id:"debug_getblockrlp"},"debug_getBlockRlp"),(0,l.kt)("p",null,"Retrieves a block in the RLP-serialized form."),(0,l.kt)(r.Z,{mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"params",label:"Parameters",mdxType:"TabItem"},(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"number"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hex integer)"))),(0,l.kt)(i.Z,{value:"request",label:"Request",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl localhost:8545 \\\n  -X POST \\\n  -H "Content-Type: application/json" \\\n  --data \'{\n      "jsonrpc": "2.0",\n      "id": 0,\n      "method": "debug_getBlockRlp",\n      "params": [number]\n    }\'\n'))),(0,l.kt)(i.Z,{value:"response",label:"Response",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": 0,\n  "result": result\n}\n')),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"result"),": array of ",(0,l.kt)("em",{parentName:"p"},"string")," (hex data)"))),(0,l.kt)("h3",{id:"debug_getblockrlpbyhash"},"debug_getBlockRlpByHash"),(0,l.kt)("p",null,"Retrieves a block in the RLP-serialized form."),(0,l.kt)(r.Z,{mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"params",label:"Parameters",mdxType:"TabItem"},(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"hash"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hash)"))),(0,l.kt)(i.Z,{value:"request",label:"Request",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl localhost:8545 \\\n  -X POST \\\n  -H "Content-Type: application/json" \\\n  --data \'{\n      "jsonrpc": "2.0",\n      "id": 0,\n      "method": "debug_getBlockRlpByHash",\n      "params": [hash]\n    }\'\n'))),(0,l.kt)(i.Z,{value:"response",label:"Response",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": 0,\n  "result": result\n}\n')),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"result"),": array of ",(0,l.kt)("em",{parentName:"p"},"string")," (hex data)"))),(0,l.kt)("h3",{id:"debug_getchainlevel"},"debug_getChainLevel"),(0,l.kt)("p",null,"Retrieves a representation of tree branches on a given chain level (Nethermind specific)."),(0,l.kt)(r.Z,{mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"params",label:"Parameters",mdxType:"TabItem"},(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"number"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hex integer)"))),(0,l.kt)(i.Z,{value:"request",label:"Request",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl localhost:8545 \\\n  -X POST \\\n  -H "Content-Type: application/json" \\\n  --data \'{\n      "jsonrpc": "2.0",\n      "id": 0,\n      "method": "debug_getChainLevel",\n      "params": [number]\n    }\'\n'))),(0,l.kt)(i.Z,{value:"response",label:"Response",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": 0,\n  "result": result\n}\n')),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"result"),": ",(0,l.kt)("em",{parentName:"p"},"object")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"blockInfos"),": array of ",(0,l.kt)("em",{parentName:"li"},"object"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"blockHash"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hash)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"isFinalized"),": ",(0,l.kt)("em",{parentName:"li"},"boolean")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"totalDifficulty"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hex integer)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"wasProcessed"),": ",(0,l.kt)("em",{parentName:"li"},"boolean")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"hasBlockOnMainChain"),": ",(0,l.kt)("em",{parentName:"li"},"boolean"))))),(0,l.kt)("h3",{id:"debug_getconfigvalue"},"debug_getConfigValue"),(0,l.kt)("p",null,"Retrieves the Nethermind configuration value, e.g. JsonRpc.Enabled"),(0,l.kt)(r.Z,{mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"params",label:"Parameters",mdxType:"TabItem"},(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"category"),": ",(0,l.kt)("em",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"name"),": ",(0,l.kt)("em",{parentName:"li"},"string")))),(0,l.kt)(i.Z,{value:"request",label:"Request",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl localhost:8545 \\\n  -X POST \\\n  -H "Content-Type: application/json" \\\n  --data \'{\n      "jsonrpc": "2.0",\n      "id": 0,\n      "method": "debug_getConfigValue",\n      "params": [category, name]\n    }\'\n'))),(0,l.kt)(i.Z,{value:"response",label:"Response",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": 0,\n  "result": result\n}\n')),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"result"),": ",(0,l.kt)("em",{parentName:"p"},"object")))),(0,l.kt)("h3",{id:"debug_getsyncstage"},"debug_getSyncStage"),(0,l.kt)("p",null,"Retrives Nethermind Sync Stage, With extra Metadata"),(0,l.kt)(r.Z,{mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"request",label:"Request",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl localhost:8545 \\\n  -X POST \\\n  -H "Content-Type: application/json" \\\n  --data \'{\n      "jsonrpc": "2.0",\n      "id": 0,\n      "method": "debug_getSyncStage",\n      "params": []\n    }\'\n'))),(0,l.kt)(i.Z,{value:"response",label:"Response",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": 0,\n  "result": result\n}\n')),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"result"),": ",(0,l.kt)("em",{parentName:"p"},"object")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"currentStage"),": ",(0,l.kt)("em",{parentName:"li"},"string"))))),(0,l.kt)("h3",{id:"debug_insertreceipts"},"debug_insertReceipts"),(0,l.kt)("p",null,"Insert receipts for the block after verifying receipts root correctness."),(0,l.kt)(r.Z,{mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"params",label:"Parameters",mdxType:"TabItem"},(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"blockParameter"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (block number or hash or either of ",(0,l.kt)("inlineCode",{parentName:"li"},"earliest"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"finalized"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"latest"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"pending"),", or ",(0,l.kt)("inlineCode",{parentName:"li"},"safe"),")"),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"receiptForRpc"),": array of ",(0,l.kt)("em",{parentName:"li"},"object"))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"blobGasPrice"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hex integer)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"blobGasUsed"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hex integer)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"blockHash"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hash)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"blockNumber"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hex integer)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"contractAddress"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (address)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"cumulativeGasUsed"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hex integer)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"effectiveGasPrice"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hex integer)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"error"),": ",(0,l.kt)("em",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"from"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (address)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"gasUsed"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hex integer)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"logs"),": array of ",(0,l.kt)("em",{parentName:"li"},"object"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"address"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (address)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"blockHash"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hash)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"blockNumber"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hex integer)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"data"),": array of ",(0,l.kt)("em",{parentName:"li"},"string")," (hex data)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"logIndex"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hex integer)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"removed"),": ",(0,l.kt)("em",{parentName:"li"},"boolean")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"topics"),": array of ",(0,l.kt)("em",{parentName:"li"},"string")," (hash)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"transactionHash"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hash)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"transactionIndex"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hex integer)"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"logsBloom"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hex data)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"root"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hash)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"status"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hex integer)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"to"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (address)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"transactionHash"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hash)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"transactionIndex"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hex integer)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"type"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (transaction type)"))),(0,l.kt)(i.Z,{value:"request",label:"Request",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl localhost:8545 \\\n  -X POST \\\n  -H "Content-Type: application/json" \\\n  --data \'{\n      "jsonrpc": "2.0",\n      "id": 0,\n      "method": "debug_insertReceipts",\n      "params": [blockParameter, receiptForRpc]\n    }\'\n'))),(0,l.kt)(i.Z,{value:"response",label:"Response",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": 0,\n  "result": result\n}\n')),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"result"),": ",(0,l.kt)("em",{parentName:"p"},"boolean")))),(0,l.kt)("h3",{id:"debug_migratereceipts"},"debug_migrateReceipts"),(0,l.kt)("p",null,"Sets the block number up to which receipts will be migrated to (Nethermind specific)."),(0,l.kt)(r.Z,{mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"params",label:"Parameters",mdxType:"TabItem"},(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"blockNumber"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hex integer)"))),(0,l.kt)(i.Z,{value:"request",label:"Request",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl localhost:8545 \\\n  -X POST \\\n  -H "Content-Type: application/json" \\\n  --data \'{\n      "jsonrpc": "2.0",\n      "id": 0,\n      "method": "debug_migrateReceipts",\n      "params": [blockNumber]\n    }\'\n'))),(0,l.kt)(i.Z,{value:"response",label:"Response",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": 0,\n  "result": result\n}\n')),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"result"),": ",(0,l.kt)("em",{parentName:"p"},"boolean")))),(0,l.kt)("h3",{id:"debug_resethead"},"debug_resetHead"),(0,l.kt)("p",null,"Updates / resets head block - use only when the node got stuck due to DB / memory corruption (Nethermind specific)."),(0,l.kt)(r.Z,{mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"params",label:"Parameters",mdxType:"TabItem"},(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"blockHash"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hash)"))),(0,l.kt)(i.Z,{value:"request",label:"Request",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl localhost:8545 \\\n  -X POST \\\n  -H "Content-Type: application/json" \\\n  --data \'{\n      "jsonrpc": "2.0",\n      "id": 0,\n      "method": "debug_resetHead",\n      "params": [blockHash]\n    }\'\n'))),(0,l.kt)(i.Z,{value:"response",label:"Response",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": 0,\n  "result": result\n}\n')),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"result"),": ",(0,l.kt)("em",{parentName:"p"},"boolean")))),(0,l.kt)("h3",{id:"debug_standardtraceblocktofile"},"debug_standardTraceBlockToFile"),(0,l.kt)("p",null,"Writes to a file the full stack trace of all invoked opcodes of the transaction specified (or all transactions if not specified) that was included in the block specified. The parent of the block must be present or it will fail."),(0,l.kt)(r.Z,{mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"params",label:"Parameters",mdxType:"TabItem"},(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"blockHash"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hash)"),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"options"),": ",(0,l.kt)("em",{parentName:"li"},"object"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"disableMemory"),": ",(0,l.kt)("em",{parentName:"li"},"boolean")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"disableStack"),": ",(0,l.kt)("em",{parentName:"li"},"boolean")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"disableStorage"),": ",(0,l.kt)("em",{parentName:"li"},"boolean")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"enableMemory"),": ",(0,l.kt)("em",{parentName:"li"},"boolean")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"timeout"),": ",(0,l.kt)("em",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"tracer"),": ",(0,l.kt)("em",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"txHash"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hash)"))))),(0,l.kt)(i.Z,{value:"request",label:"Request",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl localhost:8545 \\\n  -X POST \\\n  -H "Content-Type: application/json" \\\n  --data \'{\n      "jsonrpc": "2.0",\n      "id": 0,\n      "method": "debug_standardTraceBlockToFile",\n      "params": [blockHash, options]\n    }\'\n'))),(0,l.kt)(i.Z,{value:"response",label:"Response",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": 0,\n  "result": result\n}\n')),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"result"),": array of ",(0,l.kt)("em",{parentName:"p"},"string")))),(0,l.kt)("h3",{id:"debug_traceblock"},"debug_traceBlock"),(0,l.kt)("p",null,"Returns the full stack trace of all invoked opcodes of all transactions that were included in the block specified. The parent of the block must be present or it will fail."),(0,l.kt)(r.Z,{mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"params",label:"Parameters",mdxType:"TabItem"},(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"blockRlp"),": array of ",(0,l.kt)("em",{parentName:"li"},"string")," (hex data)"),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"options"),": ",(0,l.kt)("em",{parentName:"li"},"object"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"disableMemory"),": ",(0,l.kt)("em",{parentName:"li"},"boolean")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"disableStack"),": ",(0,l.kt)("em",{parentName:"li"},"boolean")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"disableStorage"),": ",(0,l.kt)("em",{parentName:"li"},"boolean")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"enableMemory"),": ",(0,l.kt)("em",{parentName:"li"},"boolean")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"timeout"),": ",(0,l.kt)("em",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"tracer"),": ",(0,l.kt)("em",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"txHash"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hash)"))))),(0,l.kt)(i.Z,{value:"request",label:"Request",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl localhost:8545 \\\n  -X POST \\\n  -H "Content-Type: application/json" \\\n  --data \'{\n      "jsonrpc": "2.0",\n      "id": 0,\n      "method": "debug_traceBlock",\n      "params": [blockRlp, options]\n    }\'\n'))),(0,l.kt)(i.Z,{value:"response",label:"Response",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": 0,\n  "result": result\n}\n')),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"result"),": array of ",(0,l.kt)("em",{parentName:"p"},"object")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"structLogs"),": ",(0,l.kt)("em",{parentName:"li"},"object")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"failed"),": ",(0,l.kt)("em",{parentName:"li"},"boolean")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"gas"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hex integer)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"returnValue"),": array of ",(0,l.kt)("em",{parentName:"li"},"string")," (hex data)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"storagesByDepth"),": ",(0,l.kt)("em",{parentName:"li"},"object"))))),(0,l.kt)("h3",{id:"debug_traceblockbyhash"},"debug_traceBlockByHash"),(0,l.kt)("p",null,"Similar to debug_traceBlock, this method accepts a block hash and replays the block that is already present in the database."),(0,l.kt)(r.Z,{mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"params",label:"Parameters",mdxType:"TabItem"},(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"blockHash"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hash)"),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"options"),": ",(0,l.kt)("em",{parentName:"li"},"object"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"disableMemory"),": ",(0,l.kt)("em",{parentName:"li"},"boolean")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"disableStack"),": ",(0,l.kt)("em",{parentName:"li"},"boolean")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"disableStorage"),": ",(0,l.kt)("em",{parentName:"li"},"boolean")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"enableMemory"),": ",(0,l.kt)("em",{parentName:"li"},"boolean")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"timeout"),": ",(0,l.kt)("em",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"tracer"),": ",(0,l.kt)("em",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"txHash"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hash)"))))),(0,l.kt)(i.Z,{value:"request",label:"Request",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl localhost:8545 \\\n  -X POST \\\n  -H "Content-Type: application/json" \\\n  --data \'{\n      "jsonrpc": "2.0",\n      "id": 0,\n      "method": "debug_traceBlockByHash",\n      "params": [blockHash, options]\n    }\'\n'))),(0,l.kt)(i.Z,{value:"response",label:"Response",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": 0,\n  "result": result\n}\n')),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"result"),": array of ",(0,l.kt)("em",{parentName:"p"},"object")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"structLogs"),": ",(0,l.kt)("em",{parentName:"li"},"object")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"failed"),": ",(0,l.kt)("em",{parentName:"li"},"boolean")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"gas"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hex integer)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"returnValue"),": array of ",(0,l.kt)("em",{parentName:"li"},"string")," (hex data)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"storagesByDepth"),": ",(0,l.kt)("em",{parentName:"li"},"object"))))),(0,l.kt)("h3",{id:"debug_traceblockbynumber"},"debug_traceBlockByNumber"),(0,l.kt)("p",null,'Similar to debug_traceBlock, this method accepts a block number as well as "latest" or "finalized" and replays the block that is already present in the database.'),(0,l.kt)(r.Z,{mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"params",label:"Parameters",mdxType:"TabItem"},(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"blockParameter"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (block number or hash or either of ",(0,l.kt)("inlineCode",{parentName:"li"},"earliest"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"finalized"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"latest"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"pending"),", or ",(0,l.kt)("inlineCode",{parentName:"li"},"safe"),")"),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"options"),": ",(0,l.kt)("em",{parentName:"li"},"object"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"disableMemory"),": ",(0,l.kt)("em",{parentName:"li"},"boolean")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"disableStack"),": ",(0,l.kt)("em",{parentName:"li"},"boolean")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"disableStorage"),": ",(0,l.kt)("em",{parentName:"li"},"boolean")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"enableMemory"),": ",(0,l.kt)("em",{parentName:"li"},"boolean")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"timeout"),": ",(0,l.kt)("em",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"tracer"),": ",(0,l.kt)("em",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"txHash"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hash)"))))),(0,l.kt)(i.Z,{value:"request",label:"Request",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl localhost:8545 \\\n  -X POST \\\n  -H "Content-Type: application/json" \\\n  --data \'{\n      "jsonrpc": "2.0",\n      "id": 0,\n      "method": "debug_traceBlockByNumber",\n      "params": [blockParameter, options]\n    }\'\n'))),(0,l.kt)(i.Z,{value:"response",label:"Response",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": 0,\n  "result": result\n}\n')),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"result"),": array of ",(0,l.kt)("em",{parentName:"p"},"object")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"structLogs"),": ",(0,l.kt)("em",{parentName:"li"},"object")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"failed"),": ",(0,l.kt)("em",{parentName:"li"},"boolean")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"gas"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hex integer)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"returnValue"),": array of ",(0,l.kt)("em",{parentName:"li"},"string")," (hex data)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"storagesByDepth"),": ",(0,l.kt)("em",{parentName:"li"},"object"))))),(0,l.kt)("h3",{id:"debug_tracecall"},"debug_traceCall"),(0,l.kt)("p",null,"This method lets you run an eth_call within the context of the given block execution using the final state of parent block as the base. The block can be specified either by hash or by number. It takes the same input object as a eth_call. It returns the same output as debug_traceTransaction."),(0,l.kt)(r.Z,{mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"params",label:"Parameters",mdxType:"TabItem"},(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"call"),": ",(0,l.kt)("em",{parentName:"p"},"object")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"accessList"),": array of ",(0,l.kt)("em",{parentName:"li"},"object"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"address"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (address)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"storageKeys"),": array of ",(0,l.kt)("em",{parentName:"li"},"string")," (hex integer)"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"blobVersionedHashes"),": array of array of ",(0,l.kt)("em",{parentName:"li"},"string")," (hex data)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"blockHash"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hash)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"blockNumber"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hex integer)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"chainId"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hex integer)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"data"),": array of ",(0,l.kt)("em",{parentName:"li"},"string")," (hex data)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"from"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (address)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"gas"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hex integer)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"gasPrice"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hex integer)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"hash"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hash)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"input"),": array of ",(0,l.kt)("em",{parentName:"li"},"string")," (hex data)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"maxFeePerBlobGas"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hex integer)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"maxFeePerGas"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hex integer)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"maxPriorityFeePerGas"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hex integer)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"nonce"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hex integer)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"r"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hex integer)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"s"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hex integer)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"to"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (address)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"transactionIndex"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hex integer)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"type"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (transaction type)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"v"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hex integer)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"value"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hex integer)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"yParity"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hex integer)"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"blockParameter"),": ",(0,l.kt)("em",{parentName:"p"},"string")," (block number or hash or either of ",(0,l.kt)("inlineCode",{parentName:"p"},"earliest"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"finalized"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"latest"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"pending"),", or ",(0,l.kt)("inlineCode",{parentName:"p"},"safe"),")")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"options"),": ",(0,l.kt)("em",{parentName:"p"},"object")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"disableMemory"),": ",(0,l.kt)("em",{parentName:"li"},"boolean")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"disableStack"),": ",(0,l.kt)("em",{parentName:"li"},"boolean")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"disableStorage"),": ",(0,l.kt)("em",{parentName:"li"},"boolean")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"enableMemory"),": ",(0,l.kt)("em",{parentName:"li"},"boolean")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"timeout"),": ",(0,l.kt)("em",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"tracer"),": ",(0,l.kt)("em",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"txHash"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hash)"))))),(0,l.kt)(i.Z,{value:"request",label:"Request",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl localhost:8545 \\\n  -X POST \\\n  -H "Content-Type: application/json" \\\n  --data \'{\n      "jsonrpc": "2.0",\n      "id": 0,\n      "method": "debug_traceCall",\n      "params": [call, blockParameter, options]\n    }\'\n'))),(0,l.kt)(i.Z,{value:"response",label:"Response",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": 0,\n  "result": result\n}\n')),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"result"),": ",(0,l.kt)("em",{parentName:"p"},"object")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"structLogs"),": ",(0,l.kt)("em",{parentName:"li"},"object")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"failed"),": ",(0,l.kt)("em",{parentName:"li"},"boolean")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"gas"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hex integer)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"returnValue"),": array of ",(0,l.kt)("em",{parentName:"li"},"string")," (hex data)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"storagesByDepth"),": ",(0,l.kt)("em",{parentName:"li"},"object"))))),(0,l.kt)("h3",{id:"debug_tracetransaction"},"debug_traceTransaction"),(0,l.kt)("p",null,"This method will attempt to run the transaction in the exact same manner as it was executed on the network. It will replay any transaction that may have been executed prior to this one before it will finally attempt to execute the transaction that corresponds to the given hash."),(0,l.kt)(r.Z,{mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"params",label:"Parameters",mdxType:"TabItem"},(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"transactionHash"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hash)"),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"options"),": ",(0,l.kt)("em",{parentName:"li"},"object"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"disableMemory"),": ",(0,l.kt)("em",{parentName:"li"},"boolean")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"disableStack"),": ",(0,l.kt)("em",{parentName:"li"},"boolean")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"disableStorage"),": ",(0,l.kt)("em",{parentName:"li"},"boolean")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"enableMemory"),": ",(0,l.kt)("em",{parentName:"li"},"boolean")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"timeout"),": ",(0,l.kt)("em",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"tracer"),": ",(0,l.kt)("em",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"txHash"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hash)"))))),(0,l.kt)(i.Z,{value:"request",label:"Request",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl localhost:8545 \\\n  -X POST \\\n  -H "Content-Type: application/json" \\\n  --data \'{\n      "jsonrpc": "2.0",\n      "id": 0,\n      "method": "debug_traceTransaction",\n      "params": [transactionHash, options]\n    }\'\n'))),(0,l.kt)(i.Z,{value:"response",label:"Response",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": 0,\n  "result": result\n}\n')),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"result"),": ",(0,l.kt)("em",{parentName:"p"},"object")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"structLogs"),": ",(0,l.kt)("em",{parentName:"li"},"object")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"failed"),": ",(0,l.kt)("em",{parentName:"li"},"boolean")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"gas"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hex integer)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"returnValue"),": array of ",(0,l.kt)("em",{parentName:"li"},"string")," (hex data)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"storagesByDepth"),": ",(0,l.kt)("em",{parentName:"li"},"object"))))),(0,l.kt)("h3",{id:"debug_tracetransactionbyblockandindex"},"debug_traceTransactionByBlockAndIndex"),(0,l.kt)(r.Z,{mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"params",label:"Parameters",mdxType:"TabItem"},(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"blockParameter"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (block number or hash or either of ",(0,l.kt)("inlineCode",{parentName:"li"},"earliest"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"finalized"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"latest"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"pending"),", or ",(0,l.kt)("inlineCode",{parentName:"li"},"safe"),")"),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"txIndex"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hex integer)"),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"options"),": ",(0,l.kt)("em",{parentName:"li"},"object"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"disableMemory"),": ",(0,l.kt)("em",{parentName:"li"},"boolean")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"disableStack"),": ",(0,l.kt)("em",{parentName:"li"},"boolean")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"disableStorage"),": ",(0,l.kt)("em",{parentName:"li"},"boolean")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"enableMemory"),": ",(0,l.kt)("em",{parentName:"li"},"boolean")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"timeout"),": ",(0,l.kt)("em",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"tracer"),": ",(0,l.kt)("em",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"txHash"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hash)"))))),(0,l.kt)(i.Z,{value:"request",label:"Request",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl localhost:8545 \\\n  -X POST \\\n  -H "Content-Type: application/json" \\\n  --data \'{\n      "jsonrpc": "2.0",\n      "id": 0,\n      "method": "debug_traceTransactionByBlockAndIndex",\n      "params": [blockParameter, txIndex, options]\n    }\'\n'))),(0,l.kt)(i.Z,{value:"response",label:"Response",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": 0,\n  "result": result\n}\n')),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"result"),": ",(0,l.kt)("em",{parentName:"p"},"object")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"structLogs"),": ",(0,l.kt)("em",{parentName:"li"},"object")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"failed"),": ",(0,l.kt)("em",{parentName:"li"},"boolean")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"gas"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hex integer)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"returnValue"),": array of ",(0,l.kt)("em",{parentName:"li"},"string")," (hex data)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"storagesByDepth"),": ",(0,l.kt)("em",{parentName:"li"},"object"))))),(0,l.kt)("h3",{id:"debug_tracetransactionbyblockhashandindex"},"debug_traceTransactionByBlockhashAndIndex"),(0,l.kt)(r.Z,{mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"params",label:"Parameters",mdxType:"TabItem"},(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"blockHash"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hash)"),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"txIndex"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hex integer)"),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"options"),": ",(0,l.kt)("em",{parentName:"li"},"object"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"disableMemory"),": ",(0,l.kt)("em",{parentName:"li"},"boolean")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"disableStack"),": ",(0,l.kt)("em",{parentName:"li"},"boolean")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"disableStorage"),": ",(0,l.kt)("em",{parentName:"li"},"boolean")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"enableMemory"),": ",(0,l.kt)("em",{parentName:"li"},"boolean")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"timeout"),": ",(0,l.kt)("em",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"tracer"),": ",(0,l.kt)("em",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"txHash"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hash)"))))),(0,l.kt)(i.Z,{value:"request",label:"Request",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl localhost:8545 \\\n  -X POST \\\n  -H "Content-Type: application/json" \\\n  --data \'{\n      "jsonrpc": "2.0",\n      "id": 0,\n      "method": "debug_traceTransactionByBlockhashAndIndex",\n      "params": [blockHash, txIndex, options]\n    }\'\n'))),(0,l.kt)(i.Z,{value:"response",label:"Response",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": 0,\n  "result": result\n}\n')),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"result"),": ",(0,l.kt)("em",{parentName:"p"},"object")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"structLogs"),": ",(0,l.kt)("em",{parentName:"li"},"object")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"failed"),": ",(0,l.kt)("em",{parentName:"li"},"boolean")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"gas"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hex integer)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"returnValue"),": array of ",(0,l.kt)("em",{parentName:"li"},"string")," (hex data)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"storagesByDepth"),": ",(0,l.kt)("em",{parentName:"li"},"object"))))),(0,l.kt)("h3",{id:"debug_tracetransactioninblockbyhash"},"debug_traceTransactionInBlockByHash"),(0,l.kt)(r.Z,{mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"params",label:"Parameters",mdxType:"TabItem"},(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"blockRlp"),": array of ",(0,l.kt)("em",{parentName:"li"},"string")," (hex data)"),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"transactionHash"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hash)"),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"options"),": ",(0,l.kt)("em",{parentName:"li"},"object"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"disableMemory"),": ",(0,l.kt)("em",{parentName:"li"},"boolean")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"disableStack"),": ",(0,l.kt)("em",{parentName:"li"},"boolean")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"disableStorage"),": ",(0,l.kt)("em",{parentName:"li"},"boolean")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"enableMemory"),": ",(0,l.kt)("em",{parentName:"li"},"boolean")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"timeout"),": ",(0,l.kt)("em",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"tracer"),": ",(0,l.kt)("em",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"txHash"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hash)"))))),(0,l.kt)(i.Z,{value:"request",label:"Request",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl localhost:8545 \\\n  -X POST \\\n  -H "Content-Type: application/json" \\\n  --data \'{\n      "jsonrpc": "2.0",\n      "id": 0,\n      "method": "debug_traceTransactionInBlockByHash",\n      "params": [blockRlp, transactionHash, options]\n    }\'\n'))),(0,l.kt)(i.Z,{value:"response",label:"Response",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": 0,\n  "result": result\n}\n')),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"result"),": ",(0,l.kt)("em",{parentName:"p"},"object")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"structLogs"),": ",(0,l.kt)("em",{parentName:"li"},"object")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"failed"),": ",(0,l.kt)("em",{parentName:"li"},"boolean")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"gas"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hex integer)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"returnValue"),": array of ",(0,l.kt)("em",{parentName:"li"},"string")," (hex data)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"storagesByDepth"),": ",(0,l.kt)("em",{parentName:"li"},"object"))))),(0,l.kt)("h3",{id:"debug_tracetransactioninblockbyindex"},"debug_traceTransactionInBlockByIndex"),(0,l.kt)(r.Z,{mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"params",label:"Parameters",mdxType:"TabItem"},(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"blockRlp"),": array of ",(0,l.kt)("em",{parentName:"li"},"string")," (hex data)"),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"txIndex"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hex integer)"),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"options"),": ",(0,l.kt)("em",{parentName:"li"},"object"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"disableMemory"),": ",(0,l.kt)("em",{parentName:"li"},"boolean")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"disableStack"),": ",(0,l.kt)("em",{parentName:"li"},"boolean")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"disableStorage"),": ",(0,l.kt)("em",{parentName:"li"},"boolean")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"enableMemory"),": ",(0,l.kt)("em",{parentName:"li"},"boolean")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"timeout"),": ",(0,l.kt)("em",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"tracer"),": ",(0,l.kt)("em",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"txHash"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hash)"))))),(0,l.kt)(i.Z,{value:"request",label:"Request",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl localhost:8545 \\\n  -X POST \\\n  -H "Content-Type: application/json" \\\n  --data \'{\n      "jsonrpc": "2.0",\n      "id": 0,\n      "method": "debug_traceTransactionInBlockByIndex",\n      "params": [blockRlp, txIndex, options]\n    }\'\n'))),(0,l.kt)(i.Z,{value:"response",label:"Response",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": 0,\n  "result": result\n}\n')),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"result"),": ",(0,l.kt)("em",{parentName:"p"},"object")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"structLogs"),": ",(0,l.kt)("em",{parentName:"li"},"object")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"failed"),": ",(0,l.kt)("em",{parentName:"li"},"boolean")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"gas"),": ",(0,l.kt)("em",{parentName:"li"},"string")," (hex integer)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"returnValue"),": array of ",(0,l.kt)("em",{parentName:"li"},"string")," (hex data)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"storagesByDepth"),": ",(0,l.kt)("em",{parentName:"li"},"object"))))))}N.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2175],{3905:(t,e,n)=>{n.d(e,{Zo:()=>p,kt:()=>N});var r=n(7294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},i=Object.keys(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var c=r.createContext({}),s=function(t){var e=r.useContext(c),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},p=function(t){var e=s(t.components);return r.createElement(c.Provider,{value:e},t.children)},f="mdxType",m={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,i=t.originalType,c=t.parentName,p=l(t,["components","mdxType","originalType","parentName"]),f=s(n),d=a,N=f["".concat(c,".").concat(d)]||f[d]||m[d]||i;return n?r.createElement(N,o(o({ref:e},p),{},{components:n})):r.createElement(N,o({ref:e},p))}));function N(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var c in e)hasOwnProperty.call(e,c)&&(l[c]=e[c]);l.originalType=t,l[f]="string"==typeof t?t:a,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4936:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const i={},o="AccountAbstraction",l={unversionedId:"fundamentals/configuration/accountabstraction",id:"fundamentals/configuration/accountabstraction",title:"AccountAbstraction",description:"| Property                      | Env Variable                                                      | Description                                                                                                                                  | Default                      |",source:"@site/docs/02-fundamentals/04-configuration/accountabstraction.md",sourceDirName:"02-fundamentals/04-configuration",slug:"/fundamentals/configuration/accountabstraction",permalink:"/nethermindeth/docs/fundamentals/configuration/accountabstraction",draft:!1,editUrl:"https://github.com/NethermindEth/docs/tree/main/docs/docs/02-fundamentals/04-configuration/accountabstraction.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Configuration",permalink:"/nethermindeth/docs/fundamentals/configuration/"},next:{title:"Aura",permalink:"/nethermindeth/docs/fundamentals/configuration/aura"}},c={},s=[],p={toc:s},f="wrapper";function m(t){let{components:e,...n}=t;return(0,a.kt)(f,(0,r.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"accountabstraction"},"AccountAbstraction"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Property"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Env Variable"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Default"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"AaPriorityPeersMaxCount"),(0,a.kt)("td",{parentName:"tr",align:"left"},"NETHERMIND_ACCOUNTABSTRACTIONCONFIG_AAPRIORITYPEERSMAXCOUNT"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Max number of priority AccountAbstraction peers."),(0,a.kt)("td",{parentName:"tr",align:"left"},"20")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"Enabled"),(0,a.kt)("td",{parentName:"tr",align:"left"},"NETHERMIND_ACCOUNTABSTRACTIONCONFIG_ENABLED"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Defines whether UserOperations are allowed."),(0,a.kt)("td",{parentName:"tr",align:"left"},"false")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"EntryPointContractAddresses"),(0,a.kt)("td",{parentName:"tr",align:"left"},"NETHERMIND_ACCOUNTABSTRACTIONCONFIG_ENTRYPOINTCONTRACTADDRESSES"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Defines the comma separated list of hex string representations of the addresses of the EntryPoint contract to which transactions can be made"),(0,a.kt)("td",{parentName:"tr",align:"left"})),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"FlashbotsEndpoint"),(0,a.kt)("td",{parentName:"tr",align:"left"},"NETHERMIND_ACCOUNTABSTRACTIONCONFIG_FLASHBOTSENDPOINT"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Defines the string URL for the flashbots bundle reception endpoint"),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"https://relay.flashbots.net/"},"https://relay.flashbots.net/"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"MaximumUserOperationPerSender"),(0,a.kt)("td",{parentName:"tr",align:"left"},"NETHERMIND_ACCOUNTABSTRACTIONCONFIG_MAXIMUMUSEROPERATIONPERSENDER"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Defines the maximum number of UserOperations that can be kept for each sender"),(0,a.kt)("td",{parentName:"tr",align:"left"},"1")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"MinimumGasPrice"),(0,a.kt)("td",{parentName:"tr",align:"left"},"NETHERMIND_ACCOUNTABSTRACTIONCONFIG_MINIMUMGASPRICE"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Defines the minimum gas price for a user operation to be accepted"),(0,a.kt)("td",{parentName:"tr",align:"left"},"1")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"UserOperationPoolSize"),(0,a.kt)("td",{parentName:"tr",align:"left"},"NETHERMIND_ACCOUNTABSTRACTIONCONFIG_USEROPERATIONPOOLSIZE"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Defines the maximum number of UserOperations that can be kept in memory by clients"),(0,a.kt)("td",{parentName:"tr",align:"left"},"200")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"WhitelistedPaymasters"),(0,a.kt)("td",{parentName:"tr",align:"left"},"NETHERMIND_ACCOUNTABSTRACTIONCONFIG_WHITELISTEDPAYMASTERS"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Defines a comma separated list of the hex string representations of paymasters that are whitelisted by the node"),(0,a.kt)("td",{parentName:"tr",align:"left"})))))}m.isMDXComponent=!0}}]);
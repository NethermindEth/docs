"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3643],{3905:(t,e,r)=>{r.d(e,{Zo:()=>s,kt:()=>N});var a=r(7294);function n(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function i(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,a)}return r}function d(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?i(Object(r),!0).forEach((function(e){n(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function m(t,e){if(null==t)return{};var r,a,n=function(t,e){if(null==t)return{};var r,a,n={},i=Object.keys(t);for(a=0;a<i.length;a++)r=i[a],e.indexOf(r)>=0||(n[r]=t[r]);return n}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(a=0;a<i.length;a++)r=i[a],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(n[r]=t[r])}return n}var o=a.createContext({}),l=function(t){var e=a.useContext(o),r=e;return t&&(r="function"==typeof t?t(e):d(d({},e),t)),r},s=function(t){var e=l(t.components);return a.createElement(o.Provider,{value:e},t.children)},p="mdxType",f={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},b=a.forwardRef((function(t,e){var r=t.components,n=t.mdxType,i=t.originalType,o=t.parentName,s=m(t,["components","mdxType","originalType","parentName"]),p=l(r),b=n,N=p["".concat(o,".").concat(b)]||p[b]||f[b]||i;return r?a.createElement(N,d(d({ref:e},s),{},{components:r})):a.createElement(N,d({ref:e},s))}));function N(t,e){var r=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var i=r.length,d=new Array(i);d[0]=b;var m={};for(var o in e)hasOwnProperty.call(e,o)&&(m[o]=e[o]);m.originalType=t,m[p]="string"==typeof t?t:n,d[1]=m;for(var l=2;l<i;l++)d[l]=r[l];return a.createElement.apply(null,d)}return a.createElement.apply(null,r)}b.displayName="MDXCreateElement"},5363:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>o,contentTitle:()=>d,default:()=>f,frontMatter:()=>i,metadata:()=>m,toc:()=>l});var a=r(7462),n=(r(7294),r(3905));const i={},d="Db",m={unversionedId:"monitoring/metrics-explanation/db",id:"monitoring/metrics-explanation/db",title:"Db",description:"| Metric | Description |",source:"@site/docs/04-monitoring/metrics-explanation/db.md",sourceDirName:"04-monitoring/metrics-explanation",slug:"/monitoring/metrics-explanation/db",permalink:"/nethermindeth/docs/monitoring/metrics-explanation/db",draft:!1,editUrl:"https://github.com/NethermindEth/docs/tree/main/docs/docs/04-monitoring/metrics-explanation/db.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Consensus.AuRa",permalink:"/nethermindeth/docs/monitoring/metrics-explanation/consensus.aura"},next:{title:"Using dotnet-counters",permalink:"/nethermindeth/docs/monitoring/metrics-explanation/dotnet-counters"}},o={},l=[],s={toc:l},p="wrapper";function f(t){let{components:e,...r}=t;return(0,n.kt)(p,(0,a.Z)({},s,r,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"db"},"Db"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Metric"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"nethermind_block_infos_db_reads"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Number of Block Infos DB reads.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"nethermind_block_infos_db_size"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Size of blockInfos DB in bytes")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"nethermind_block_infos_db_writes"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Number of Block Infos DB writes.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"nethermind_blocks_db_reads"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Number of Blocks DB reads.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"nethermind_blocks_db_size"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Size of blocks DB in bytes")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"nethermind_blocks_db_writes"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Number of Blocks DB writes.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"nethermind_bloom_db_reads"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Number of Bloom DB reads.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"nethermind_bloom_db_size"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Size of bloom DB in bytes")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"nethermind_bloom_db_writes"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Number of Bloom DB writes.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"nethermind_c_h_t_db_reads"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Number of CHT DB reads.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"nethermind_cht_db_size"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Size of cht DB in bytes")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"nethermind_c_h_t_db_writes"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Number of CHT DB writes.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"nethermind_code_db_reads"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Number of Code DB reads.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"nethermind_code_db_size"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Size of code DB in bytes")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"nethermind_code_db_writes"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Number of Code DB writes.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"nethermind_db_block_cache_memory_size"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Size of unmanaged memory for DB block caches in bytes")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"nethermind_db_index_filter_memory_size"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Size of unmanaged memory for DB indexes and filters in bytes")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"nethermind_db_memtable_memory_size"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Size of unmanaged memory for DB memtables in bytes")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"nethermind_db_stats"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Metrics extracted from RocksDB Compaction Stats and DB Statistics")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"nethermind_db_total_memory_size"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Size of total unmanaged memory for DB in bytes")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"nethermind_header_db_reads"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Number of Headers DB reads.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"nethermind_header_db_writes"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Number of Headers DB writes.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"nethermind_headers_db_size"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Size of headers DB in bytes")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"nethermind_metadata_db_reads"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Number of Metadata DB reads.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"nethermind_metadata_db_size"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Size of metadata DB in bytes")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"nethermind_metadata_db_writes"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Number of Metadata DB writes.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"nethermind_other_db_reads"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Number of other DB reads.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"nethermind_other_db_writes"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Number of other DB writes.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"nethermind_receipts_db_reads"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Number of Receipts DB reads.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"nethermind_receipts_db_size"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Size of receipts DB in bytes")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"nethermind_receipts_db_writes"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Number of Receipts DB writes.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"nethermind_state_db_pruning"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Indicator if StadeDb is being pruned.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"nethermind_state_db_reads"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Number of State DB reads.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"nethermind_state_db_size"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Size of state DB in bytes")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"nethermind_state_db_writes"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Number of State DB writes.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"nethermind_state_tree_reads"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Number of State Trie reads.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"nethermind_state_tree_writes"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Number of Blocks Trie writes.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"nethermind_storage_tree_reads"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Number of storge trie reads.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"nethermind_storage_tree_writes"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Number of storage trie writes.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"nethermind_witness_db_reads"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Number of Witness DB reads.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"nethermind_witness_db_size"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Size of witness DB in bytes")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"nethermind_witness_db_writes"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Number of Witness DB writes.")))))}f.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5668],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>h});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),d=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=d(e.components);return a.createElement(l.Provider,{value:n},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=d(t),u=r,h=p["".concat(l,".").concat(u)]||p[u]||m[u]||o;return t?a.createElement(h,i(i({ref:n},c),{},{components:t})):a.createElement(h,i({ref:n},c))}));function h(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=u;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[p]="string"==typeof e?e:r,i[1]=s;for(var d=2;d<o;d++)i[d]=t[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},3901:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>d});var a=t(7462),r=(t(7294),t(3905));const o={title:"Spaceneth-based chain",sidebar_position:2},i=void 0,s={unversionedId:"fundamentals/private-networks/spaceneth",id:"fundamentals/private-networks/spaceneth",title:"Spaceneth-based chain",description:"Spaceneth private network setup looks very similar to the above Clique setup. However, there are few major differences and will be described below.",source:"@site/docs/fundamentals/private-networks/spaceneth.md",sourceDirName:"fundamentals/private-networks",slug:"/fundamentals/private-networks/spaceneth",permalink:"/docs/fundamentals/private-networks/spaceneth",draft:!1,editUrl:"https://github.com/NethermindEth/docs/tree/main/docs/docs/fundamentals/private-networks/spaceneth.md",tags:[],version:"current",lastUpdatedAt:1694728765,formattedLastUpdatedAt:"Sep 14, 2023",sidebarPosition:2,frontMatter:{title:"Spaceneth-based chain",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Clique-based chain",permalink:"/docs/fundamentals/private-networks/clique"},next:{title:"Interacting with Nethermind",permalink:"/docs/category/interacting-with-nethermind"}},l={},d=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Setup",id:"setup",level:2}],c={toc:d},p="wrapper";function m(e){let{components:n,...t}=e;return(0,r.kt)(p,(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Spaceneth private network setup looks very similar to the above Clique setup. However, there are few major differences and will be described below."),(0,r.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Linux bash shell"),(0,r.kt)("li",{parentName:"ul"},"Docker-compose"),(0,r.kt)("li",{parentName:"ul"},"Docker"),(0,r.kt)("li",{parentName:"ul"},"jq"),(0,r.kt)("li",{parentName:"ul"},"Nethermind.Cli")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt-get install -y docker-compose docker.io jq\n")),(0,r.kt)("h2",{id:"setup"},"Setup"),(0,r.kt)("p",null,"In this setup we will create a private network of 3 Nethermind nodes running a simple testing NethDev consensus algorithm."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"create separate directory where we will store all files")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"mkdir private-networking\ncd private-networking\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"create folders for each node and genesis")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"mkdir node_1 node_2 node_3 genesis\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"download ",(0,r.kt)("a",{parentName:"li",href:"https://raw.githubusercontent.com/NethermindEth/nethermind/master/src/Nethermind/Chains/spaceneth.json"},"chainspec")," file with spaceneth engine and place it in ",(0,r.kt)("inlineCode",{parentName:"li"},"genesis")," folder.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"wget https://raw.githubusercontent.com/NethermindEth/nethermind/master/src/Nethermind/Chains/spaceneth.json\ncp spaceneth.json genesis/spaceneth.json\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"create subfolders in each node folder")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir node_1/configs node_1/staticNodes node_2/configs node_2/staticNodes node_3/configs node_3/staticNodes\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"create a ",(0,r.kt)("inlineCode",{parentName:"li"},"static-nodes.json")," file and place it in ",(0,r.kt)("inlineCode",{parentName:"li"},"node_1/staticNodes")," subfolders ","(","do this for node","_","2 and node","_","3 as well",")")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cat <<EOF > node_1/staticNodes/static-nodes.json\n[\n\n]\nEOF\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"create ",(0,r.kt)("inlineCode",{parentName:"li"},"config.cfg")," file and place it in ",(0,r.kt)("inlineCode",{parentName:"li"},"node_1/configs")," subfolders ","(","do this for node","_","2 and node","_","3 as well",")")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'cat <<EOF > node_1/configs/config.cfg\n{\n    "Init": {\n        "WebSocketsEnabled": false,\n        "StoreReceipts" : true,\n        "EnableUnsecuredDevWallet": true,\n        "IsMining": true,\n        "ChainSpecPath": "/config/genesis/spaceneth.json",\n        "BaseDbPath": "nethermind_db/spaceneth",\n        "LogFileName": "spaceneth.logs.txt",\n        "StaticNodesPath": "Data/static-nodes.json"\n    },\n    "Network": {\n        "DiscoveryPort": 30300,\n        "P2PPort": 30300,\n        "LocalIp": "10.5.0.2",\n        "ExternalIp": "10.5.0.2"\n    },\n    "JsonRpc": {\n        "Enabled": true,\n        "Host": "10.5.0.2",\n        "Port": 8545\n    }\n}\nEOF\n')),(0,r.kt)("p",null,"For each node you will need to change following items in configuration:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"LocalIp"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"ExternalIp")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"Host")," should have the same value and be incremented for each node e.g. 10.5.0.3, 10.5.0.4 and so on and so forth.")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://nethermind.readthedocs.io/en/latest/_images/configs-spaceneth.png",alt:null})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"copy ",(0,r.kt)("inlineCode",{parentName:"li"},"docker-compose")," file and place it in working directory")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'version: "3.5"\nservices:\n\n    node_1:\n        image: nethermind/nethermind\n        command: --config config\n        volumes:\n            - ./genesis:/config/genesis\n            - ./node_1/configs/config.cfg:/nethermind/configs/config.cfg\n            - ./node_1/staticNodes/static-nodes.json:/nethermind/Data/static-nodes.json\n            - ./node_1/db/spaceneth:/nethermind/nethermind_db/spaceneth\n            - ./node_1/keystore:/nethermind/keystore\n        ports:\n            - 0.0.0.0:8547:8545\n        networks:\n            vpcbr:\n                ipv4_address: 10.5.0.2\n\n    node_2:\n        image: nethermind/nethermind\n        command: --config config\n        volumes:\n            - ./genesis:/config/genesis\n            - ./node_2/configs/config.cfg:/nethermind/configs/config.cfg\n            - ./node_2/staticNodes/static-nodes.json:/nethermind/Data/static-nodes.json\n            - ./node_2/db/spaceneth:/nethermind/nethermind_db/spaceneth\n            - ./node_2/keystore:/nethermind/keystore\n        ports:\n            - 0.0.0.0:8548:8545\n        networks:\n            vpcbr:\n                ipv4_address: 10.5.0.3\n\n    node_3:\n        image: nethermind/nethermind\n        command: --config config\n        volumes:\n            - ./genesis:/config/genesis\n            - ./node_3/configs/config.cfg:/nethermind/configs/config.cfg\n            - ./node_3/staticNodes/static-nodes.json:/nethermind/Data/static-nodes.json\n            - ./node_3/db/spaceneth:/nethermind/nethermind_db/spaceneth\n            - ./node_3/keystore:/nethermind/keystore\n        ports:\n            - 0.0.0.0:8549:8545\n        networks:\n            vpcbr:\n                ipv4_address: 10.5.0.4\n\nnetworks:\n    vpcbr:\n        driver: bridge\n        ipam:\n            config:\n                - subnet: 10.5.0.0/16\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"run each node separately so that we can copy ",(0,r.kt)("inlineCode",{parentName:"li"},"Enode")," for each node, we will use them later")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker-compose run node_1\n")),(0,r.kt)("p",null,"Stop the node when Nethermind initialization completes ",(0,r.kt)("inlineCode",{parentName:"p"},"Ctrl +C"),". Copy ",(0,r.kt)("inlineCode",{parentName:"p"},"This node")," values to a text file. Continue with node","_","2 and node","_","3."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://nethermind.readthedocs.io/en/latest/_images/initialization-spaceneth.png",alt:null})),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"You can use ",(0,r.kt)("inlineCode",{parentName:"p"},"Nethermind.Cli")," to fetch these values from nodes by executing the following.",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"Nethermind.Cli")," can be found in packages on ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/NethermindEth/nethermind/releases"},"Github Releases")," or ",(0,r.kt)("a",{parentName:"p",href:"http://downloads.nethermind.io/"},"Download Page"),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'node.switch("http://localhost:8547")\nnode.enode\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"the file should look similar to this:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'STATIC_NODE_1="enode://2281549869465d98e90cebc45e1d6834a01465a990add7bcf07a49287e7e66b50ca27f9c70a46190cef7ad746dd5d5b6b9dfee0c9954104c8e9bd0d42758ec58@10.5.0.2:30300"\nSTATIC_NODE_2="enode://37878ec16a5ed87c9c80b4648e5428f5c768eddd79483be118319c49d11c4e535dac328b5216696cefe0792b7b64adc4de3aeb377550651e982590e62e5a500e@10.5.0.3:30300"\nSTATIC_NODE_3="enode://6067f06d84c207e6233dacf1f3ef961bd7231f71d5425cbaf843cf19cfd5f7e13b024d234e4e5f6175bdb37c0bbccd14488b481b2280efb66d0631a20ae13ea3@10.5.0.4:30300"\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"copy & paste above variables into your terminal"),(0,r.kt)("li",{parentName:"ul"},"for each node modify previously created empty ",(0,r.kt)("inlineCode",{parentName:"li"},"static-nodes.json")," files by appending ",(0,r.kt)("inlineCode",{parentName:"li"},"Enodes")," to them")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'cat <<EOF > node_1/staticNodes/static-nodes.json\n[\n    "$STATIC_NODE_1",\n    "$STATIC_NODE_2",\n    "$STATIC_NODE_3"\n]\nEOF\n')),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://nethermind.readthedocs.io/en/latest/_images/staticNodes-spaceneth.png",alt:null})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"remove databases for each node")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo rm -rf node_1/db/spaceneth node_2/db/spaceneth node_3/db/spaceneth\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"run ",(0,r.kt)("inlineCode",{parentName:"li"},"docker-compose")," file")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"docker-compose up\n")),(0,r.kt)("p",null,"You should see the private network working. We now need to send transactions in order to start producing blocks."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"run ",(0,r.kt)("inlineCode",{parentName:"li"},"Nethermind.Cli")),(0,r.kt)("li",{parentName:"ul"},"run ",(0,r.kt)("inlineCode",{parentName:"li"},'node.switch("http://localhost:8547")')),(0,r.kt)("li",{parentName:"ul"},"run ",(0,r.kt)("inlineCode",{parentName:"li"},"personal.listAccounts")),(0,r.kt)("li",{parentName:"ul"},"create new account ",(0,r.kt)("inlineCode",{parentName:"li"},'personal.newAccount("test")'))),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://nethermind.readthedocs.io/en/latest/_images/cli-spaceneth.png",alt:null})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"re-run ",(0,r.kt)("inlineCode",{parentName:"li"},"personal.listAccounts")," and copy your account address"),(0,r.kt)("li",{parentName:"ul"},"trigger blocks producing by sending transaction using ",(0,r.kt)("inlineCode",{parentName:"li"},"eth_sendTransaction"),"JSON RPC method or ",(0,r.kt)("inlineCode",{parentName:"li"},"Nethermind.Cli"),". Change ",(0,r.kt)("inlineCode",{parentName:"li"},"from")," property to your account address")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'curl --data \'{"jsonrpc":"2.0","method":"eth_sendTransaction","params":[{\n    "from": "0x89892f2c746d98cf270ff2a76672e493d9731c24",\n    "to": "0xe1ab8145f7e55dc933d51a18c793f901a3a0b276",\n    "gas": "0x76c0",\n    "gasPrice": "0x9184e72a000",\n    "value": "0x9184e72a",\n    "data": "0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675"\n}],"id":0}\' -H "Content-Type: application/json" -X POST localhost:8547\n')),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://nethermind.readthedocs.io/en/latest/_images/finalization-spaceneth.png",alt:null})))}m.isMDXComponent=!0}}]);